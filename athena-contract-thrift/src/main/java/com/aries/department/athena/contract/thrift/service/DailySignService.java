/**
 * Autogenerated by Thrift Compiler (0.12.0)
 * <p>
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *
 * @generated
 */
package com.aries.department.athena.contract.thrift.service;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-05-31")
public class DailySignService {

    public interface Iface {

        public java.lang.String ping() throws org.apache.thrift.TException;

        public boolean addSignNow(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId) throws org.apache.thrift.TException;

        public boolean hasSigned(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills) throws org.apache.thrift.TException;

        public boolean signNowIfNotSignedInPeriod(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills) throws org.apache.thrift.TException;

        public java.util.List<java.lang.Long> getSignList(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills) throws org.apache.thrift.TException;

    }

    public interface AsyncIface {

        public void ping(org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException;

        public void addSignNow(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException;

        public void hasSigned(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException;

        public void signNowIfNotSignedInPeriod(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException;

        public void getSignList(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills, org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.Long>> resultHandler) throws org.apache.thrift.TException;

    }

    public static class Client extends org.apache.thrift.TServiceClient implements Iface {
        public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
            public Factory() {
            }

            public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
                return new Client(prot);
            }

            public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
                return new Client(iprot, oprot);
            }
        }

        public Client(org.apache.thrift.protocol.TProtocol prot) {
            super(prot, prot);
        }

        public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
            super(iprot, oprot);
        }

        public java.lang.String ping() throws org.apache.thrift.TException {
            send_ping();
            return recv_ping();
        }

        public void send_ping() throws org.apache.thrift.TException {
            ping_args args = new ping_args();
            sendBase("ping", args);
        }

        public java.lang.String recv_ping() throws org.apache.thrift.TException {
            ping_result result = new ping_result();
            receiveBase(result, "ping");
            if (result.isSetSuccess()) {
                return result.success;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "ping failed: unknown result");
        }

        public boolean addSignNow(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId) throws org.apache.thrift.TException {
            send_addSignNow(companyInfo, staffId);
            return recv_addSignNow();
        }

        public void send_addSignNow(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId) throws org.apache.thrift.TException {
            addSignNow_args args = new addSignNow_args();
            args.setCompanyInfo(companyInfo);
            args.setStaffId(staffId);
            sendBase("addSignNow", args);
        }

        public boolean recv_addSignNow() throws org.apache.thrift.TException {
            addSignNow_result result = new addSignNow_result();
            receiveBase(result, "addSignNow");
            if (result.isSetSuccess()) {
                return result.success;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addSignNow failed: unknown result");
        }

        public boolean hasSigned(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills) throws org.apache.thrift.TException {
            send_hasSigned(companyInfo, staffId, startTimeMills, endTimeMills);
            return recv_hasSigned();
        }

        public void send_hasSigned(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills) throws org.apache.thrift.TException {
            hasSigned_args args = new hasSigned_args();
            args.setCompanyInfo(companyInfo);
            args.setStaffId(staffId);
            args.setStartTimeMills(startTimeMills);
            args.setEndTimeMills(endTimeMills);
            sendBase("hasSigned", args);
        }

        public boolean recv_hasSigned() throws org.apache.thrift.TException {
            hasSigned_result result = new hasSigned_result();
            receiveBase(result, "hasSigned");
            if (result.isSetSuccess()) {
                return result.success;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "hasSigned failed: unknown result");
        }

        public boolean signNowIfNotSignedInPeriod(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills) throws org.apache.thrift.TException {
            send_signNowIfNotSignedInPeriod(companyInfo, staffId, startTimeMills, endTimeMills);
            return recv_signNowIfNotSignedInPeriod();
        }

        public void send_signNowIfNotSignedInPeriod(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills) throws org.apache.thrift.TException {
            signNowIfNotSignedInPeriod_args args = new signNowIfNotSignedInPeriod_args();
            args.setCompanyInfo(companyInfo);
            args.setStaffId(staffId);
            args.setStartTimeMills(startTimeMills);
            args.setEndTimeMills(endTimeMills);
            sendBase("signNowIfNotSignedInPeriod", args);
        }

        public boolean recv_signNowIfNotSignedInPeriod() throws org.apache.thrift.TException {
            signNowIfNotSignedInPeriod_result result = new signNowIfNotSignedInPeriod_result();
            receiveBase(result, "signNowIfNotSignedInPeriod");
            if (result.isSetSuccess()) {
                return result.success;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "signNowIfNotSignedInPeriod failed: unknown result");
        }

        public java.util.List<java.lang.Long> getSignList(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills) throws org.apache.thrift.TException {
            send_getSignList(companyInfo, staffId, startTimeMills, endTimeMills);
            return recv_getSignList();
        }

        public void send_getSignList(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills) throws org.apache.thrift.TException {
            getSignList_args args = new getSignList_args();
            args.setCompanyInfo(companyInfo);
            args.setStaffId(staffId);
            args.setStartTimeMills(startTimeMills);
            args.setEndTimeMills(endTimeMills);
            sendBase("getSignList", args);
        }

        public java.util.List<java.lang.Long> recv_getSignList() throws org.apache.thrift.TException {
            getSignList_result result = new getSignList_result();
            receiveBase(result, "getSignList");
            if (result.isSetSuccess()) {
                return result.success;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getSignList failed: unknown result");
        }

    }

    public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
        public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
            private org.apache.thrift.async.TAsyncClientManager clientManager;
            private org.apache.thrift.protocol.TProtocolFactory protocolFactory;

            public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
                this.clientManager = clientManager;
                this.protocolFactory = protocolFactory;
            }

            public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
                return new AsyncClient(protocolFactory, clientManager, transport);
            }
        }

        public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
            super(protocolFactory, clientManager, transport);
        }

        public void ping(org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            ping_call method_call = new ping_call(resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class ping_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.String> {
            public ping_call(org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("ping", org.apache.thrift.protocol.TMessageType.CALL, 0));
                ping_args args = new ping_args();
                args.write(prot);
                prot.writeMessageEnd();
            }

            public java.lang.String getResult() throws org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_ping();
            }
        }

        public void addSignNow(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            addSignNow_call method_call = new addSignNow_call(companyInfo, staffId, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class addSignNow_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Boolean> {
            private com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo;
            private long staffId;

            public addSignNow_call(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.companyInfo = companyInfo;
                this.staffId = staffId;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addSignNow", org.apache.thrift.protocol.TMessageType.CALL, 0));
                addSignNow_args args = new addSignNow_args();
                args.setCompanyInfo(companyInfo);
                args.setStaffId(staffId);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public java.lang.Boolean getResult() throws org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_addSignNow();
            }
        }

        public void hasSigned(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            hasSigned_call method_call = new hasSigned_call(companyInfo, staffId, startTimeMills, endTimeMills, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class hasSigned_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Boolean> {
            private com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo;
            private long staffId;
            private long startTimeMills;
            private long endTimeMills;

            public hasSigned_call(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.companyInfo = companyInfo;
                this.staffId = staffId;
                this.startTimeMills = startTimeMills;
                this.endTimeMills = endTimeMills;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("hasSigned", org.apache.thrift.protocol.TMessageType.CALL, 0));
                hasSigned_args args = new hasSigned_args();
                args.setCompanyInfo(companyInfo);
                args.setStaffId(staffId);
                args.setStartTimeMills(startTimeMills);
                args.setEndTimeMills(endTimeMills);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public java.lang.Boolean getResult() throws org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_hasSigned();
            }
        }

        public void signNowIfNotSignedInPeriod(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            signNowIfNotSignedInPeriod_call method_call = new signNowIfNotSignedInPeriod_call(companyInfo, staffId, startTimeMills, endTimeMills, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class signNowIfNotSignedInPeriod_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Boolean> {
            private com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo;
            private long staffId;
            private long startTimeMills;
            private long endTimeMills;

            public signNowIfNotSignedInPeriod_call(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.companyInfo = companyInfo;
                this.staffId = staffId;
                this.startTimeMills = startTimeMills;
                this.endTimeMills = endTimeMills;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("signNowIfNotSignedInPeriod", org.apache.thrift.protocol.TMessageType.CALL, 0));
                signNowIfNotSignedInPeriod_args args = new signNowIfNotSignedInPeriod_args();
                args.setCompanyInfo(companyInfo);
                args.setStaffId(staffId);
                args.setStartTimeMills(startTimeMills);
                args.setEndTimeMills(endTimeMills);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public java.lang.Boolean getResult() throws org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_signNowIfNotSignedInPeriod();
            }
        }

        public void getSignList(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills, org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.Long>> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            getSignList_call method_call = new getSignList_call(companyInfo, staffId, startTimeMills, endTimeMills, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class getSignList_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<java.lang.Long>> {
            private com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo;
            private long staffId;
            private long startTimeMills;
            private long endTimeMills;

            public getSignList_call(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long staffId, long startTimeMills, long endTimeMills, org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.Long>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.companyInfo = companyInfo;
                this.staffId = staffId;
                this.startTimeMills = startTimeMills;
                this.endTimeMills = endTimeMills;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getSignList", org.apache.thrift.protocol.TMessageType.CALL, 0));
                getSignList_args args = new getSignList_args();
                args.setCompanyInfo(companyInfo);
                args.setStaffId(staffId);
                args.setStartTimeMills(startTimeMills);
                args.setEndTimeMills(endTimeMills);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public java.util.List<java.lang.Long> getResult() throws org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_getSignList();
            }
        }

    }

    public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
        private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());

        public Processor(I iface) {
            super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
        }

        protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
            super(iface, getProcessMap(processMap));
        }

        private static <I extends Iface> java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
            processMap.put("ping", new ping());
            processMap.put("addSignNow", new addSignNow());
            processMap.put("hasSigned", new hasSigned());
            processMap.put("signNowIfNotSignedInPeriod", new signNowIfNotSignedInPeriod());
            processMap.put("getSignList", new getSignList());
            return processMap;
        }

        public static class ping<I extends Iface> extends org.apache.thrift.ProcessFunction<I, ping_args> {
            public ping() {
                super("ping");
            }

            public ping_args getEmptyArgsInstance() {
                return new ping_args();
            }

            protected boolean isOneway() {
                return false;
            }

            @Override
            protected boolean rethrowUnhandledExceptions() {
                return false;
            }

            public ping_result getResult(I iface, ping_args args) throws org.apache.thrift.TException {
                ping_result result = new ping_result();
                result.success = iface.ping();
                return result;
            }
        }

        public static class addSignNow<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addSignNow_args> {
            public addSignNow() {
                super("addSignNow");
            }

            public addSignNow_args getEmptyArgsInstance() {
                return new addSignNow_args();
            }

            protected boolean isOneway() {
                return false;
            }

            @Override
            protected boolean rethrowUnhandledExceptions() {
                return false;
            }

            public addSignNow_result getResult(I iface, addSignNow_args args) throws org.apache.thrift.TException {
                addSignNow_result result = new addSignNow_result();
                result.success = iface.addSignNow(args.companyInfo, args.staffId);
                result.setSuccessIsSet(true);
                return result;
            }
        }

        public static class hasSigned<I extends Iface> extends org.apache.thrift.ProcessFunction<I, hasSigned_args> {
            public hasSigned() {
                super("hasSigned");
            }

            public hasSigned_args getEmptyArgsInstance() {
                return new hasSigned_args();
            }

            protected boolean isOneway() {
                return false;
            }

            @Override
            protected boolean rethrowUnhandledExceptions() {
                return false;
            }

            public hasSigned_result getResult(I iface, hasSigned_args args) throws org.apache.thrift.TException {
                hasSigned_result result = new hasSigned_result();
                result.success = iface.hasSigned(args.companyInfo, args.staffId, args.startTimeMills, args.endTimeMills);
                result.setSuccessIsSet(true);
                return result;
            }
        }

        public static class signNowIfNotSignedInPeriod<I extends Iface> extends org.apache.thrift.ProcessFunction<I, signNowIfNotSignedInPeriod_args> {
            public signNowIfNotSignedInPeriod() {
                super("signNowIfNotSignedInPeriod");
            }

            public signNowIfNotSignedInPeriod_args getEmptyArgsInstance() {
                return new signNowIfNotSignedInPeriod_args();
            }

            protected boolean isOneway() {
                return false;
            }

            @Override
            protected boolean rethrowUnhandledExceptions() {
                return false;
            }

            public signNowIfNotSignedInPeriod_result getResult(I iface, signNowIfNotSignedInPeriod_args args) throws org.apache.thrift.TException {
                signNowIfNotSignedInPeriod_result result = new signNowIfNotSignedInPeriod_result();
                result.success = iface.signNowIfNotSignedInPeriod(args.companyInfo, args.staffId, args.startTimeMills, args.endTimeMills);
                result.setSuccessIsSet(true);
                return result;
            }
        }

        public static class getSignList<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getSignList_args> {
            public getSignList() {
                super("getSignList");
            }

            public getSignList_args getEmptyArgsInstance() {
                return new getSignList_args();
            }

            protected boolean isOneway() {
                return false;
            }

            @Override
            protected boolean rethrowUnhandledExceptions() {
                return false;
            }

            public getSignList_result getResult(I iface, getSignList_args args) throws org.apache.thrift.TException {
                getSignList_result result = new getSignList_result();
                result.success = iface.getSignList(args.companyInfo, args.staffId, args.startTimeMills, args.endTimeMills);
                return result;
            }
        }

    }

    public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
        private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());

        public AsyncProcessor(I iface) {
            super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
        }

        protected AsyncProcessor(I iface, java.util.Map<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>> processMap) {
            super(iface, getProcessMap(processMap));
        }

        private static <I extends AsyncIface> java.util.Map<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>> processMap) {
            processMap.put("ping", new ping());
            processMap.put("addSignNow", new addSignNow());
            processMap.put("hasSigned", new hasSigned());
            processMap.put("signNowIfNotSignedInPeriod", new signNowIfNotSignedInPeriod());
            processMap.put("getSignList", new getSignList());
            return processMap;
        }

        public static class ping<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, ping_args, java.lang.String> {
            public ping() {
                super("ping");
            }

            public ping_args getEmptyArgsInstance() {
                return new ping_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<java.lang.String> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<java.lang.String>() {
                    public void onComplete(java.lang.String o) {
                        ping_result result = new ping_result();
                        result.success = o;
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }

                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        ping_result result = new ping_result();
                        if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException) e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb, msg, msgType, seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, ping_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
                iface.ping(resultHandler);
            }
        }

        public static class addSignNow<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addSignNow_args, java.lang.Boolean> {
            public addSignNow() {
                super("addSignNow");
            }

            public addSignNow_args getEmptyArgsInstance() {
                return new addSignNow_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean>() {
                    public void onComplete(java.lang.Boolean o) {
                        addSignNow_result result = new addSignNow_result();
                        result.success = o;
                        result.setSuccessIsSet(true);
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }

                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        addSignNow_result result = new addSignNow_result();
                        if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException) e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb, msg, msgType, seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, addSignNow_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
                iface.addSignNow(args.companyInfo, args.staffId, resultHandler);
            }
        }

        public static class hasSigned<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, hasSigned_args, java.lang.Boolean> {
            public hasSigned() {
                super("hasSigned");
            }

            public hasSigned_args getEmptyArgsInstance() {
                return new hasSigned_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean>() {
                    public void onComplete(java.lang.Boolean o) {
                        hasSigned_result result = new hasSigned_result();
                        result.success = o;
                        result.setSuccessIsSet(true);
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }

                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        hasSigned_result result = new hasSigned_result();
                        if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException) e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb, msg, msgType, seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, hasSigned_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
                iface.hasSigned(args.companyInfo, args.staffId, args.startTimeMills, args.endTimeMills, resultHandler);
            }
        }

        public static class signNowIfNotSignedInPeriod<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, signNowIfNotSignedInPeriod_args, java.lang.Boolean> {
            public signNowIfNotSignedInPeriod() {
                super("signNowIfNotSignedInPeriod");
            }

            public signNowIfNotSignedInPeriod_args getEmptyArgsInstance() {
                return new signNowIfNotSignedInPeriod_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean>() {
                    public void onComplete(java.lang.Boolean o) {
                        signNowIfNotSignedInPeriod_result result = new signNowIfNotSignedInPeriod_result();
                        result.success = o;
                        result.setSuccessIsSet(true);
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }

                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        signNowIfNotSignedInPeriod_result result = new signNowIfNotSignedInPeriod_result();
                        if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException) e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb, msg, msgType, seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, signNowIfNotSignedInPeriod_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
                iface.signNowIfNotSignedInPeriod(args.companyInfo, args.staffId, args.startTimeMills, args.endTimeMills, resultHandler);
            }
        }

        public static class getSignList<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getSignList_args, java.util.List<java.lang.Long>> {
            public getSignList() {
                super("getSignList");
            }

            public getSignList_args getEmptyArgsInstance() {
                return new getSignList_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.Long>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.Long>>() {
                    public void onComplete(java.util.List<java.lang.Long> o) {
                        getSignList_result result = new getSignList_result();
                        result.success = o;
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }

                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        getSignList_result result = new getSignList_result();
                        if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException) e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb, msg, msgType, seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, getSignList_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.Long>> resultHandler) throws org.apache.thrift.TException {
                iface.getSignList(args.companyInfo, args.staffId, args.startTimeMills, args.endTimeMills, resultHandler);
            }
        }

    }

    public static class ping_args implements org.apache.thrift.TBase<ping_args, ping_args._Fields>, java.io.Serializable, Cloneable, Comparable<ping_args> {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ping_args");


        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ping_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ping_argsTupleSchemeFactory();


        /**
         * The set of fields this struct contains, along with convenience methods for finding and manipulating them.
         */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            ;

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByThriftId(int fieldId) {
                switch (fieldId) {
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null)
                    throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ping_args.class, metaDataMap);
        }

        public ping_args() {
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public ping_args(ping_args other) {
        }

        public ping_args deepCopy() {
            return new ping_args(this);
        }

        @Override
        public void clear() {
        }

        public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
            switch (field) {
            }
        }

        @org.apache.thrift.annotation.Nullable
        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
            }
            throw new java.lang.IllegalStateException();
        }

        /**
         * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
         */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof ping_args)
                return this.equals((ping_args) that);
            return false;
        }

        public boolean equals(ping_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            return hashCode;
        }

        @Override
        public int compareTo(ping_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            return 0;
        }

        @org.apache.thrift.annotation.Nullable
        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("ping_args(");
            boolean first = true;

            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class ping_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public ping_argsStandardScheme getScheme() {
                return new ping_argsStandardScheme();
            }
        }

        private static class ping_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<ping_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, ping_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true) {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, ping_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class ping_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public ping_argsTupleScheme getScheme() {
                return new ping_argsTupleScheme();
            }
        }

        private static class ping_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<ping_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, ping_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, ping_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class ping_result implements org.apache.thrift.TBase<ping_result, ping_result._Fields>, java.io.Serializable, Cloneable, Comparable<ping_result> {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ping_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRING, (short) 0);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ping_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ping_resultTupleSchemeFactory();

        public @org.apache.thrift.annotation.Nullable
        java.lang.String success; // required

        /**
         * The set of fields this struct contains, along with convenience methods for finding and manipulating them.
         */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short) 0, "success");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByThriftId(int fieldId) {
                switch (fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null)
                    throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ping_result.class, metaDataMap);
        }

        public ping_result() {
        }

        public ping_result(
                java.lang.String success) {
            this();
            this.success = success;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public ping_result(ping_result other) {
            if (other.isSetSuccess()) {
                this.success = other.success;
            }
        }

        public ping_result deepCopy() {
            return new ping_result(this);
        }

        @Override
        public void clear() {
            this.success = null;
        }

        @org.apache.thrift.annotation.Nullable
        public java.lang.String getSuccess() {
            return this.success;
        }

        public ping_result setSuccess(@org.apache.thrift.annotation.Nullable java.lang.String success) {
            this.success = success;
            return this;
        }

        public void unsetSuccess() {
            this.success = null;
        }

        /**
         * Returns true if field success is set (has been assigned a value) and false otherwise
         */
        public boolean isSetSuccess() {
            return this.success != null;
        }

        public void setSuccessIsSet(boolean value) {
            if (!value) {
                this.success = null;
            }
        }

        public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((java.lang.String) value);
                    }
                    break;

            }
        }

        @org.apache.thrift.annotation.Nullable
        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return getSuccess();

            }
            throw new java.lang.IllegalStateException();
        }

        /**
         * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
         */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof ping_result)
                return this.equals((ping_result) that);
            return false;
        }

        public boolean equals(ping_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true && this.isSetSuccess();
            boolean that_present_success = true && that.isSetSuccess();
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (!this.success.equals(that.success))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
            if (isSetSuccess())
                hashCode = hashCode * 8191 + success.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(ping_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        @org.apache.thrift.annotation.Nullable
        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("ping_result(");
            boolean first = true;

            sb.append("success:");
            if (this.success == null) {
                sb.append("null");
            } else {
                sb.append(this.success);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class ping_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public ping_resultStandardScheme getScheme() {
                return new ping_resultStandardScheme();
            }
        }

        private static class ping_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<ping_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, ping_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true) {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                                struct.success = iprot.readString();
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, ping_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.success != null) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    oprot.writeString(struct.success);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class ping_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public ping_resultTupleScheme getScheme() {
                return new ping_resultTupleScheme();
            }
        }

        private static class ping_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<ping_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, ping_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                oprot.writeBitSet(optionals, 1);
                if (struct.isSetSuccess()) {
                    oprot.writeString(struct.success);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, ping_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(1);
                if (incoming.get(0)) {
                    struct.success = iprot.readString();
                    struct.setSuccessIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class addSignNow_args implements org.apache.thrift.TBase<addSignNow_args, addSignNow_args._Fields>, java.io.Serializable, Cloneable, Comparable<addSignNow_args> {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addSignNow_args");

        private static final org.apache.thrift.protocol.TField COMPANY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyInfo", org.apache.thrift.protocol.TType.STRUCT, (short) 1);
        private static final org.apache.thrift.protocol.TField STAFF_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("staffId", org.apache.thrift.protocol.TType.I64, (short) 2);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addSignNow_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addSignNow_argsTupleSchemeFactory();

        public @org.apache.thrift.annotation.Nullable
        com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo; // required
        public long staffId; // required

        /**
         * The set of fields this struct contains, along with convenience methods for finding and manipulating them.
         */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            COMPANY_INFO((short) 1, "companyInfo"),
            STAFF_ID((short) 2, "staffId");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByThriftId(int fieldId) {
                switch (fieldId) {
                    case 1: // COMPANY_INFO
                        return COMPANY_INFO;
                    case 2: // STAFF_ID
                        return STAFF_ID;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null)
                    throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __STAFFID_ISSET_ID = 0;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.COMPANY_INFO, new org.apache.thrift.meta_data.FieldMetaData("companyInfo", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.CompanyInfo.class)));
            tmpMap.put(_Fields.STAFF_ID, new org.apache.thrift.meta_data.FieldMetaData("staffId", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addSignNow_args.class, metaDataMap);
        }

        public addSignNow_args() {
        }

        public addSignNow_args(
                com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo,
                long staffId) {
            this();
            this.companyInfo = companyInfo;
            this.staffId = staffId;
            setStaffIdIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public addSignNow_args(addSignNow_args other) {
            __isset_bitfield = other.__isset_bitfield;
            if (other.isSetCompanyInfo()) {
                this.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo(other.companyInfo);
            }
            this.staffId = other.staffId;
        }

        public addSignNow_args deepCopy() {
            return new addSignNow_args(this);
        }

        @Override
        public void clear() {
            this.companyInfo = null;
            setStaffIdIsSet(false);
            this.staffId = 0;
        }

        @org.apache.thrift.annotation.Nullable
        public com.aries.department.athena.contract.thrift.dto.CompanyInfo getCompanyInfo() {
            return this.companyInfo;
        }

        public addSignNow_args setCompanyInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo) {
            this.companyInfo = companyInfo;
            return this;
        }

        public void unsetCompanyInfo() {
            this.companyInfo = null;
        }

        /**
         * Returns true if field companyInfo is set (has been assigned a value) and false otherwise
         */
        public boolean isSetCompanyInfo() {
            return this.companyInfo != null;
        }

        public void setCompanyInfoIsSet(boolean value) {
            if (!value) {
                this.companyInfo = null;
            }
        }

        public long getStaffId() {
            return this.staffId;
        }

        public addSignNow_args setStaffId(long staffId) {
            this.staffId = staffId;
            setStaffIdIsSet(true);
            return this;
        }

        public void unsetStaffId() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STAFFID_ISSET_ID);
        }

        /**
         * Returns true if field staffId is set (has been assigned a value) and false otherwise
         */
        public boolean isSetStaffId() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STAFFID_ISSET_ID);
        }

        public void setStaffIdIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STAFFID_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
            switch (field) {
                case COMPANY_INFO:
                    if (value == null) {
                        unsetCompanyInfo();
                    } else {
                        setCompanyInfo((com.aries.department.athena.contract.thrift.dto.CompanyInfo) value);
                    }
                    break;

                case STAFF_ID:
                    if (value == null) {
                        unsetStaffId();
                    } else {
                        setStaffId((java.lang.Long) value);
                    }
                    break;

            }
        }

        @org.apache.thrift.annotation.Nullable
        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case COMPANY_INFO:
                    return getCompanyInfo();

                case STAFF_ID:
                    return getStaffId();

            }
            throw new java.lang.IllegalStateException();
        }

        /**
         * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
         */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case COMPANY_INFO:
                    return isSetCompanyInfo();
                case STAFF_ID:
                    return isSetStaffId();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof addSignNow_args)
                return this.equals((addSignNow_args) that);
            return false;
        }

        public boolean equals(addSignNow_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_companyInfo = true && this.isSetCompanyInfo();
            boolean that_present_companyInfo = true && that.isSetCompanyInfo();
            if (this_present_companyInfo || that_present_companyInfo) {
                if (!(this_present_companyInfo && that_present_companyInfo))
                    return false;
                if (!this.companyInfo.equals(that.companyInfo))
                    return false;
            }

            boolean this_present_staffId = true;
            boolean that_present_staffId = true;
            if (this_present_staffId || that_present_staffId) {
                if (!(this_present_staffId && that_present_staffId))
                    return false;
                if (this.staffId != that.staffId)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetCompanyInfo()) ? 131071 : 524287);
            if (isSetCompanyInfo())
                hashCode = hashCode * 8191 + companyInfo.hashCode();

            hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(staffId);

            return hashCode;
        }

        @Override
        public int compareTo(addSignNow_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetCompanyInfo()).compareTo(other.isSetCompanyInfo());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompanyInfo()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyInfo, other.companyInfo);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetStaffId()).compareTo(other.isSetStaffId());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetStaffId()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.staffId, other.staffId);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        @org.apache.thrift.annotation.Nullable
        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("addSignNow_args(");
            boolean first = true;

            sb.append("companyInfo:");
            if (this.companyInfo == null) {
                sb.append("null");
            } else {
                sb.append(this.companyInfo);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("staffId:");
            sb.append(this.staffId);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (companyInfo != null) {
                companyInfo.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class addSignNow_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addSignNow_argsStandardScheme getScheme() {
                return new addSignNow_argsStandardScheme();
            }
        }

        private static class addSignNow_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<addSignNow_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, addSignNow_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true) {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // COMPANY_INFO
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                                struct.companyInfo.read(iprot);
                                struct.setCompanyInfoIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // STAFF_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                                struct.staffId = iprot.readI64();
                                struct.setStaffIdIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, addSignNow_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.companyInfo != null) {
                    oprot.writeFieldBegin(COMPANY_INFO_FIELD_DESC);
                    struct.companyInfo.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldBegin(STAFF_ID_FIELD_DESC);
                oprot.writeI64(struct.staffId);
                oprot.writeFieldEnd();
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class addSignNow_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addSignNow_argsTupleScheme getScheme() {
                return new addSignNow_argsTupleScheme();
            }
        }

        private static class addSignNow_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<addSignNow_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, addSignNow_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetCompanyInfo()) {
                    optionals.set(0);
                }
                if (struct.isSetStaffId()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetCompanyInfo()) {
                    struct.companyInfo.write(oprot);
                }
                if (struct.isSetStaffId()) {
                    oprot.writeI64(struct.staffId);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, addSignNow_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                    struct.companyInfo.read(iprot);
                    struct.setCompanyInfoIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.staffId = iprot.readI64();
                    struct.setStaffIdIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class addSignNow_result implements org.apache.thrift.TBase<addSignNow_result, addSignNow_result._Fields>, java.io.Serializable, Cloneable, Comparable<addSignNow_result> {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addSignNow_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short) 0);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addSignNow_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addSignNow_resultTupleSchemeFactory();

        public boolean success; // required

        /**
         * The set of fields this struct contains, along with convenience methods for finding and manipulating them.
         */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short) 0, "success");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByThriftId(int fieldId) {
                switch (fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null)
                    throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __SUCCESS_ISSET_ID = 0;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addSignNow_result.class, metaDataMap);
        }

        public addSignNow_result() {
        }

        public addSignNow_result(
                boolean success) {
            this();
            this.success = success;
            setSuccessIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public addSignNow_result(addSignNow_result other) {
            __isset_bitfield = other.__isset_bitfield;
            this.success = other.success;
        }

        public addSignNow_result deepCopy() {
            return new addSignNow_result(this);
        }

        @Override
        public void clear() {
            setSuccessIsSet(false);
            this.success = false;
        }

        public boolean isSuccess() {
            return this.success;
        }

        public addSignNow_result setSuccess(boolean success) {
            this.success = success;
            setSuccessIsSet(true);
            return this;
        }

        public void unsetSuccess() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
        }

        /**
         * Returns true if field success is set (has been assigned a value) and false otherwise
         */
        public boolean isSetSuccess() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
        }

        public void setSuccessIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((java.lang.Boolean) value);
                    }
                    break;

            }
        }

        @org.apache.thrift.annotation.Nullable
        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return isSuccess();

            }
            throw new java.lang.IllegalStateException();
        }

        /**
         * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
         */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof addSignNow_result)
                return this.equals((addSignNow_result) that);
            return false;
        }

        public boolean equals(addSignNow_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true;
            boolean that_present_success = true;
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (this.success != that.success)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((success) ? 131071 : 524287);

            return hashCode;
        }

        @Override
        public int compareTo(addSignNow_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        @org.apache.thrift.annotation.Nullable
        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("addSignNow_result(");
            boolean first = true;

            sb.append("success:");
            sb.append(this.success);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class addSignNow_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addSignNow_resultStandardScheme getScheme() {
                return new addSignNow_resultStandardScheme();
            }
        }

        private static class addSignNow_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<addSignNow_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, addSignNow_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true) {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                                struct.success = iprot.readBool();
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, addSignNow_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.isSetSuccess()) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    oprot.writeBool(struct.success);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class addSignNow_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addSignNow_resultTupleScheme getScheme() {
                return new addSignNow_resultTupleScheme();
            }
        }

        private static class addSignNow_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<addSignNow_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, addSignNow_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                oprot.writeBitSet(optionals, 1);
                if (struct.isSetSuccess()) {
                    oprot.writeBool(struct.success);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, addSignNow_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(1);
                if (incoming.get(0)) {
                    struct.success = iprot.readBool();
                    struct.setSuccessIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class hasSigned_args implements org.apache.thrift.TBase<hasSigned_args, hasSigned_args._Fields>, java.io.Serializable, Cloneable, Comparable<hasSigned_args> {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("hasSigned_args");

        private static final org.apache.thrift.protocol.TField COMPANY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyInfo", org.apache.thrift.protocol.TType.STRUCT, (short) 1);
        private static final org.apache.thrift.protocol.TField STAFF_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("staffId", org.apache.thrift.protocol.TType.I64, (short) 2);
        private static final org.apache.thrift.protocol.TField START_TIME_MILLS_FIELD_DESC = new org.apache.thrift.protocol.TField("startTimeMills", org.apache.thrift.protocol.TType.I64, (short) 3);
        private static final org.apache.thrift.protocol.TField END_TIME_MILLS_FIELD_DESC = new org.apache.thrift.protocol.TField("endTimeMills", org.apache.thrift.protocol.TType.I64, (short) 4);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new hasSigned_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new hasSigned_argsTupleSchemeFactory();

        public @org.apache.thrift.annotation.Nullable
        com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo; // required
        public long staffId; // required
        public long startTimeMills; // required
        public long endTimeMills; // required

        /**
         * The set of fields this struct contains, along with convenience methods for finding and manipulating them.
         */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            COMPANY_INFO((short) 1, "companyInfo"),
            STAFF_ID((short) 2, "staffId"),
            START_TIME_MILLS((short) 3, "startTimeMills"),
            END_TIME_MILLS((short) 4, "endTimeMills");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByThriftId(int fieldId) {
                switch (fieldId) {
                    case 1: // COMPANY_INFO
                        return COMPANY_INFO;
                    case 2: // STAFF_ID
                        return STAFF_ID;
                    case 3: // START_TIME_MILLS
                        return START_TIME_MILLS;
                    case 4: // END_TIME_MILLS
                        return END_TIME_MILLS;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null)
                    throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __STAFFID_ISSET_ID = 0;
        private static final int __STARTTIMEMILLS_ISSET_ID = 1;
        private static final int __ENDTIMEMILLS_ISSET_ID = 2;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.COMPANY_INFO, new org.apache.thrift.meta_data.FieldMetaData("companyInfo", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.CompanyInfo.class)));
            tmpMap.put(_Fields.STAFF_ID, new org.apache.thrift.meta_data.FieldMetaData("staffId", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
            tmpMap.put(_Fields.START_TIME_MILLS, new org.apache.thrift.meta_data.FieldMetaData("startTimeMills", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
            tmpMap.put(_Fields.END_TIME_MILLS, new org.apache.thrift.meta_data.FieldMetaData("endTimeMills", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(hasSigned_args.class, metaDataMap);
        }

        public hasSigned_args() {
        }

        public hasSigned_args(
                com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo,
                long staffId,
                long startTimeMills,
                long endTimeMills) {
            this();
            this.companyInfo = companyInfo;
            this.staffId = staffId;
            setStaffIdIsSet(true);
            this.startTimeMills = startTimeMills;
            setStartTimeMillsIsSet(true);
            this.endTimeMills = endTimeMills;
            setEndTimeMillsIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public hasSigned_args(hasSigned_args other) {
            __isset_bitfield = other.__isset_bitfield;
            if (other.isSetCompanyInfo()) {
                this.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo(other.companyInfo);
            }
            this.staffId = other.staffId;
            this.startTimeMills = other.startTimeMills;
            this.endTimeMills = other.endTimeMills;
        }

        public hasSigned_args deepCopy() {
            return new hasSigned_args(this);
        }

        @Override
        public void clear() {
            this.companyInfo = null;
            setStaffIdIsSet(false);
            this.staffId = 0;
            setStartTimeMillsIsSet(false);
            this.startTimeMills = 0;
            setEndTimeMillsIsSet(false);
            this.endTimeMills = 0;
        }

        @org.apache.thrift.annotation.Nullable
        public com.aries.department.athena.contract.thrift.dto.CompanyInfo getCompanyInfo() {
            return this.companyInfo;
        }

        public hasSigned_args setCompanyInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo) {
            this.companyInfo = companyInfo;
            return this;
        }

        public void unsetCompanyInfo() {
            this.companyInfo = null;
        }

        /**
         * Returns true if field companyInfo is set (has been assigned a value) and false otherwise
         */
        public boolean isSetCompanyInfo() {
            return this.companyInfo != null;
        }

        public void setCompanyInfoIsSet(boolean value) {
            if (!value) {
                this.companyInfo = null;
            }
        }

        public long getStaffId() {
            return this.staffId;
        }

        public hasSigned_args setStaffId(long staffId) {
            this.staffId = staffId;
            setStaffIdIsSet(true);
            return this;
        }

        public void unsetStaffId() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STAFFID_ISSET_ID);
        }

        /**
         * Returns true if field staffId is set (has been assigned a value) and false otherwise
         */
        public boolean isSetStaffId() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STAFFID_ISSET_ID);
        }

        public void setStaffIdIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STAFFID_ISSET_ID, value);
        }

        public long getStartTimeMills() {
            return this.startTimeMills;
        }

        public hasSigned_args setStartTimeMills(long startTimeMills) {
            this.startTimeMills = startTimeMills;
            setStartTimeMillsIsSet(true);
            return this;
        }

        public void unsetStartTimeMills() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STARTTIMEMILLS_ISSET_ID);
        }

        /**
         * Returns true if field startTimeMills is set (has been assigned a value) and false otherwise
         */
        public boolean isSetStartTimeMills() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STARTTIMEMILLS_ISSET_ID);
        }

        public void setStartTimeMillsIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STARTTIMEMILLS_ISSET_ID, value);
        }

        public long getEndTimeMills() {
            return this.endTimeMills;
        }

        public hasSigned_args setEndTimeMills(long endTimeMills) {
            this.endTimeMills = endTimeMills;
            setEndTimeMillsIsSet(true);
            return this;
        }

        public void unsetEndTimeMills() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ENDTIMEMILLS_ISSET_ID);
        }

        /**
         * Returns true if field endTimeMills is set (has been assigned a value) and false otherwise
         */
        public boolean isSetEndTimeMills() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ENDTIMEMILLS_ISSET_ID);
        }

        public void setEndTimeMillsIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ENDTIMEMILLS_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
            switch (field) {
                case COMPANY_INFO:
                    if (value == null) {
                        unsetCompanyInfo();
                    } else {
                        setCompanyInfo((com.aries.department.athena.contract.thrift.dto.CompanyInfo) value);
                    }
                    break;

                case STAFF_ID:
                    if (value == null) {
                        unsetStaffId();
                    } else {
                        setStaffId((java.lang.Long) value);
                    }
                    break;

                case START_TIME_MILLS:
                    if (value == null) {
                        unsetStartTimeMills();
                    } else {
                        setStartTimeMills((java.lang.Long) value);
                    }
                    break;

                case END_TIME_MILLS:
                    if (value == null) {
                        unsetEndTimeMills();
                    } else {
                        setEndTimeMills((java.lang.Long) value);
                    }
                    break;

            }
        }

        @org.apache.thrift.annotation.Nullable
        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case COMPANY_INFO:
                    return getCompanyInfo();

                case STAFF_ID:
                    return getStaffId();

                case START_TIME_MILLS:
                    return getStartTimeMills();

                case END_TIME_MILLS:
                    return getEndTimeMills();

            }
            throw new java.lang.IllegalStateException();
        }

        /**
         * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
         */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case COMPANY_INFO:
                    return isSetCompanyInfo();
                case STAFF_ID:
                    return isSetStaffId();
                case START_TIME_MILLS:
                    return isSetStartTimeMills();
                case END_TIME_MILLS:
                    return isSetEndTimeMills();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof hasSigned_args)
                return this.equals((hasSigned_args) that);
            return false;
        }

        public boolean equals(hasSigned_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_companyInfo = true && this.isSetCompanyInfo();
            boolean that_present_companyInfo = true && that.isSetCompanyInfo();
            if (this_present_companyInfo || that_present_companyInfo) {
                if (!(this_present_companyInfo && that_present_companyInfo))
                    return false;
                if (!this.companyInfo.equals(that.companyInfo))
                    return false;
            }

            boolean this_present_staffId = true;
            boolean that_present_staffId = true;
            if (this_present_staffId || that_present_staffId) {
                if (!(this_present_staffId && that_present_staffId))
                    return false;
                if (this.staffId != that.staffId)
                    return false;
            }

            boolean this_present_startTimeMills = true;
            boolean that_present_startTimeMills = true;
            if (this_present_startTimeMills || that_present_startTimeMills) {
                if (!(this_present_startTimeMills && that_present_startTimeMills))
                    return false;
                if (this.startTimeMills != that.startTimeMills)
                    return false;
            }

            boolean this_present_endTimeMills = true;
            boolean that_present_endTimeMills = true;
            if (this_present_endTimeMills || that_present_endTimeMills) {
                if (!(this_present_endTimeMills && that_present_endTimeMills))
                    return false;
                if (this.endTimeMills != that.endTimeMills)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetCompanyInfo()) ? 131071 : 524287);
            if (isSetCompanyInfo())
                hashCode = hashCode * 8191 + companyInfo.hashCode();

            hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(staffId);

            hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(startTimeMills);

            hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(endTimeMills);

            return hashCode;
        }

        @Override
        public int compareTo(hasSigned_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetCompanyInfo()).compareTo(other.isSetCompanyInfo());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompanyInfo()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyInfo, other.companyInfo);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetStaffId()).compareTo(other.isSetStaffId());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetStaffId()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.staffId, other.staffId);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetStartTimeMills()).compareTo(other.isSetStartTimeMills());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetStartTimeMills()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTimeMills, other.startTimeMills);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetEndTimeMills()).compareTo(other.isSetEndTimeMills());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetEndTimeMills()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTimeMills, other.endTimeMills);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        @org.apache.thrift.annotation.Nullable
        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("hasSigned_args(");
            boolean first = true;

            sb.append("companyInfo:");
            if (this.companyInfo == null) {
                sb.append("null");
            } else {
                sb.append(this.companyInfo);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("staffId:");
            sb.append(this.staffId);
            first = false;
            if (!first) sb.append(", ");
            sb.append("startTimeMills:");
            sb.append(this.startTimeMills);
            first = false;
            if (!first) sb.append(", ");
            sb.append("endTimeMills:");
            sb.append(this.endTimeMills);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (companyInfo != null) {
                companyInfo.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class hasSigned_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public hasSigned_argsStandardScheme getScheme() {
                return new hasSigned_argsStandardScheme();
            }
        }

        private static class hasSigned_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<hasSigned_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, hasSigned_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true) {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // COMPANY_INFO
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                                struct.companyInfo.read(iprot);
                                struct.setCompanyInfoIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // STAFF_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                                struct.staffId = iprot.readI64();
                                struct.setStaffIdIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 3: // START_TIME_MILLS
                            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                                struct.startTimeMills = iprot.readI64();
                                struct.setStartTimeMillsIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 4: // END_TIME_MILLS
                            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                                struct.endTimeMills = iprot.readI64();
                                struct.setEndTimeMillsIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, hasSigned_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.companyInfo != null) {
                    oprot.writeFieldBegin(COMPANY_INFO_FIELD_DESC);
                    struct.companyInfo.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldBegin(STAFF_ID_FIELD_DESC);
                oprot.writeI64(struct.staffId);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(START_TIME_MILLS_FIELD_DESC);
                oprot.writeI64(struct.startTimeMills);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(END_TIME_MILLS_FIELD_DESC);
                oprot.writeI64(struct.endTimeMills);
                oprot.writeFieldEnd();
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class hasSigned_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public hasSigned_argsTupleScheme getScheme() {
                return new hasSigned_argsTupleScheme();
            }
        }

        private static class hasSigned_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<hasSigned_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, hasSigned_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetCompanyInfo()) {
                    optionals.set(0);
                }
                if (struct.isSetStaffId()) {
                    optionals.set(1);
                }
                if (struct.isSetStartTimeMills()) {
                    optionals.set(2);
                }
                if (struct.isSetEndTimeMills()) {
                    optionals.set(3);
                }
                oprot.writeBitSet(optionals, 4);
                if (struct.isSetCompanyInfo()) {
                    struct.companyInfo.write(oprot);
                }
                if (struct.isSetStaffId()) {
                    oprot.writeI64(struct.staffId);
                }
                if (struct.isSetStartTimeMills()) {
                    oprot.writeI64(struct.startTimeMills);
                }
                if (struct.isSetEndTimeMills()) {
                    oprot.writeI64(struct.endTimeMills);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, hasSigned_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(4);
                if (incoming.get(0)) {
                    struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                    struct.companyInfo.read(iprot);
                    struct.setCompanyInfoIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.staffId = iprot.readI64();
                    struct.setStaffIdIsSet(true);
                }
                if (incoming.get(2)) {
                    struct.startTimeMills = iprot.readI64();
                    struct.setStartTimeMillsIsSet(true);
                }
                if (incoming.get(3)) {
                    struct.endTimeMills = iprot.readI64();
                    struct.setEndTimeMillsIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class hasSigned_result implements org.apache.thrift.TBase<hasSigned_result, hasSigned_result._Fields>, java.io.Serializable, Cloneable, Comparable<hasSigned_result> {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("hasSigned_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short) 0);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new hasSigned_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new hasSigned_resultTupleSchemeFactory();

        public boolean success; // required

        /**
         * The set of fields this struct contains, along with convenience methods for finding and manipulating them.
         */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short) 0, "success");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByThriftId(int fieldId) {
                switch (fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null)
                    throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __SUCCESS_ISSET_ID = 0;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(hasSigned_result.class, metaDataMap);
        }

        public hasSigned_result() {
        }

        public hasSigned_result(
                boolean success) {
            this();
            this.success = success;
            setSuccessIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public hasSigned_result(hasSigned_result other) {
            __isset_bitfield = other.__isset_bitfield;
            this.success = other.success;
        }

        public hasSigned_result deepCopy() {
            return new hasSigned_result(this);
        }

        @Override
        public void clear() {
            setSuccessIsSet(false);
            this.success = false;
        }

        public boolean isSuccess() {
            return this.success;
        }

        public hasSigned_result setSuccess(boolean success) {
            this.success = success;
            setSuccessIsSet(true);
            return this;
        }

        public void unsetSuccess() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
        }

        /**
         * Returns true if field success is set (has been assigned a value) and false otherwise
         */
        public boolean isSetSuccess() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
        }

        public void setSuccessIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((java.lang.Boolean) value);
                    }
                    break;

            }
        }

        @org.apache.thrift.annotation.Nullable
        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return isSuccess();

            }
            throw new java.lang.IllegalStateException();
        }

        /**
         * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
         */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof hasSigned_result)
                return this.equals((hasSigned_result) that);
            return false;
        }

        public boolean equals(hasSigned_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true;
            boolean that_present_success = true;
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (this.success != that.success)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((success) ? 131071 : 524287);

            return hashCode;
        }

        @Override
        public int compareTo(hasSigned_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        @org.apache.thrift.annotation.Nullable
        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("hasSigned_result(");
            boolean first = true;

            sb.append("success:");
            sb.append(this.success);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class hasSigned_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public hasSigned_resultStandardScheme getScheme() {
                return new hasSigned_resultStandardScheme();
            }
        }

        private static class hasSigned_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<hasSigned_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, hasSigned_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true) {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                                struct.success = iprot.readBool();
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, hasSigned_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.isSetSuccess()) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    oprot.writeBool(struct.success);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class hasSigned_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public hasSigned_resultTupleScheme getScheme() {
                return new hasSigned_resultTupleScheme();
            }
        }

        private static class hasSigned_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<hasSigned_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, hasSigned_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                oprot.writeBitSet(optionals, 1);
                if (struct.isSetSuccess()) {
                    oprot.writeBool(struct.success);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, hasSigned_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(1);
                if (incoming.get(0)) {
                    struct.success = iprot.readBool();
                    struct.setSuccessIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class signNowIfNotSignedInPeriod_args implements org.apache.thrift.TBase<signNowIfNotSignedInPeriod_args, signNowIfNotSignedInPeriod_args._Fields>, java.io.Serializable, Cloneable, Comparable<signNowIfNotSignedInPeriod_args> {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("signNowIfNotSignedInPeriod_args");

        private static final org.apache.thrift.protocol.TField COMPANY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyInfo", org.apache.thrift.protocol.TType.STRUCT, (short) 1);
        private static final org.apache.thrift.protocol.TField STAFF_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("staffId", org.apache.thrift.protocol.TType.I64, (short) 2);
        private static final org.apache.thrift.protocol.TField START_TIME_MILLS_FIELD_DESC = new org.apache.thrift.protocol.TField("startTimeMills", org.apache.thrift.protocol.TType.I64, (short) 3);
        private static final org.apache.thrift.protocol.TField END_TIME_MILLS_FIELD_DESC = new org.apache.thrift.protocol.TField("endTimeMills", org.apache.thrift.protocol.TType.I64, (short) 4);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new signNowIfNotSignedInPeriod_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new signNowIfNotSignedInPeriod_argsTupleSchemeFactory();

        public @org.apache.thrift.annotation.Nullable
        com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo; // required
        public long staffId; // required
        public long startTimeMills; // required
        public long endTimeMills; // required

        /**
         * The set of fields this struct contains, along with convenience methods for finding and manipulating them.
         */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            COMPANY_INFO((short) 1, "companyInfo"),
            STAFF_ID((short) 2, "staffId"),
            START_TIME_MILLS((short) 3, "startTimeMills"),
            END_TIME_MILLS((short) 4, "endTimeMills");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByThriftId(int fieldId) {
                switch (fieldId) {
                    case 1: // COMPANY_INFO
                        return COMPANY_INFO;
                    case 2: // STAFF_ID
                        return STAFF_ID;
                    case 3: // START_TIME_MILLS
                        return START_TIME_MILLS;
                    case 4: // END_TIME_MILLS
                        return END_TIME_MILLS;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null)
                    throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __STAFFID_ISSET_ID = 0;
        private static final int __STARTTIMEMILLS_ISSET_ID = 1;
        private static final int __ENDTIMEMILLS_ISSET_ID = 2;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.COMPANY_INFO, new org.apache.thrift.meta_data.FieldMetaData("companyInfo", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.CompanyInfo.class)));
            tmpMap.put(_Fields.STAFF_ID, new org.apache.thrift.meta_data.FieldMetaData("staffId", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
            tmpMap.put(_Fields.START_TIME_MILLS, new org.apache.thrift.meta_data.FieldMetaData("startTimeMills", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
            tmpMap.put(_Fields.END_TIME_MILLS, new org.apache.thrift.meta_data.FieldMetaData("endTimeMills", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(signNowIfNotSignedInPeriod_args.class, metaDataMap);
        }

        public signNowIfNotSignedInPeriod_args() {
        }

        public signNowIfNotSignedInPeriod_args(
                com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo,
                long staffId,
                long startTimeMills,
                long endTimeMills) {
            this();
            this.companyInfo = companyInfo;
            this.staffId = staffId;
            setStaffIdIsSet(true);
            this.startTimeMills = startTimeMills;
            setStartTimeMillsIsSet(true);
            this.endTimeMills = endTimeMills;
            setEndTimeMillsIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public signNowIfNotSignedInPeriod_args(signNowIfNotSignedInPeriod_args other) {
            __isset_bitfield = other.__isset_bitfield;
            if (other.isSetCompanyInfo()) {
                this.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo(other.companyInfo);
            }
            this.staffId = other.staffId;
            this.startTimeMills = other.startTimeMills;
            this.endTimeMills = other.endTimeMills;
        }

        public signNowIfNotSignedInPeriod_args deepCopy() {
            return new signNowIfNotSignedInPeriod_args(this);
        }

        @Override
        public void clear() {
            this.companyInfo = null;
            setStaffIdIsSet(false);
            this.staffId = 0;
            setStartTimeMillsIsSet(false);
            this.startTimeMills = 0;
            setEndTimeMillsIsSet(false);
            this.endTimeMills = 0;
        }

        @org.apache.thrift.annotation.Nullable
        public com.aries.department.athena.contract.thrift.dto.CompanyInfo getCompanyInfo() {
            return this.companyInfo;
        }

        public signNowIfNotSignedInPeriod_args setCompanyInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo) {
            this.companyInfo = companyInfo;
            return this;
        }

        public void unsetCompanyInfo() {
            this.companyInfo = null;
        }

        /**
         * Returns true if field companyInfo is set (has been assigned a value) and false otherwise
         */
        public boolean isSetCompanyInfo() {
            return this.companyInfo != null;
        }

        public void setCompanyInfoIsSet(boolean value) {
            if (!value) {
                this.companyInfo = null;
            }
        }

        public long getStaffId() {
            return this.staffId;
        }

        public signNowIfNotSignedInPeriod_args setStaffId(long staffId) {
            this.staffId = staffId;
            setStaffIdIsSet(true);
            return this;
        }

        public void unsetStaffId() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STAFFID_ISSET_ID);
        }

        /**
         * Returns true if field staffId is set (has been assigned a value) and false otherwise
         */
        public boolean isSetStaffId() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STAFFID_ISSET_ID);
        }

        public void setStaffIdIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STAFFID_ISSET_ID, value);
        }

        public long getStartTimeMills() {
            return this.startTimeMills;
        }

        public signNowIfNotSignedInPeriod_args setStartTimeMills(long startTimeMills) {
            this.startTimeMills = startTimeMills;
            setStartTimeMillsIsSet(true);
            return this;
        }

        public void unsetStartTimeMills() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STARTTIMEMILLS_ISSET_ID);
        }

        /**
         * Returns true if field startTimeMills is set (has been assigned a value) and false otherwise
         */
        public boolean isSetStartTimeMills() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STARTTIMEMILLS_ISSET_ID);
        }

        public void setStartTimeMillsIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STARTTIMEMILLS_ISSET_ID, value);
        }

        public long getEndTimeMills() {
            return this.endTimeMills;
        }

        public signNowIfNotSignedInPeriod_args setEndTimeMills(long endTimeMills) {
            this.endTimeMills = endTimeMills;
            setEndTimeMillsIsSet(true);
            return this;
        }

        public void unsetEndTimeMills() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ENDTIMEMILLS_ISSET_ID);
        }

        /**
         * Returns true if field endTimeMills is set (has been assigned a value) and false otherwise
         */
        public boolean isSetEndTimeMills() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ENDTIMEMILLS_ISSET_ID);
        }

        public void setEndTimeMillsIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ENDTIMEMILLS_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
            switch (field) {
                case COMPANY_INFO:
                    if (value == null) {
                        unsetCompanyInfo();
                    } else {
                        setCompanyInfo((com.aries.department.athena.contract.thrift.dto.CompanyInfo) value);
                    }
                    break;

                case STAFF_ID:
                    if (value == null) {
                        unsetStaffId();
                    } else {
                        setStaffId((java.lang.Long) value);
                    }
                    break;

                case START_TIME_MILLS:
                    if (value == null) {
                        unsetStartTimeMills();
                    } else {
                        setStartTimeMills((java.lang.Long) value);
                    }
                    break;

                case END_TIME_MILLS:
                    if (value == null) {
                        unsetEndTimeMills();
                    } else {
                        setEndTimeMills((java.lang.Long) value);
                    }
                    break;

            }
        }

        @org.apache.thrift.annotation.Nullable
        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case COMPANY_INFO:
                    return getCompanyInfo();

                case STAFF_ID:
                    return getStaffId();

                case START_TIME_MILLS:
                    return getStartTimeMills();

                case END_TIME_MILLS:
                    return getEndTimeMills();

            }
            throw new java.lang.IllegalStateException();
        }

        /**
         * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
         */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case COMPANY_INFO:
                    return isSetCompanyInfo();
                case STAFF_ID:
                    return isSetStaffId();
                case START_TIME_MILLS:
                    return isSetStartTimeMills();
                case END_TIME_MILLS:
                    return isSetEndTimeMills();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof signNowIfNotSignedInPeriod_args)
                return this.equals((signNowIfNotSignedInPeriod_args) that);
            return false;
        }

        public boolean equals(signNowIfNotSignedInPeriod_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_companyInfo = true && this.isSetCompanyInfo();
            boolean that_present_companyInfo = true && that.isSetCompanyInfo();
            if (this_present_companyInfo || that_present_companyInfo) {
                if (!(this_present_companyInfo && that_present_companyInfo))
                    return false;
                if (!this.companyInfo.equals(that.companyInfo))
                    return false;
            }

            boolean this_present_staffId = true;
            boolean that_present_staffId = true;
            if (this_present_staffId || that_present_staffId) {
                if (!(this_present_staffId && that_present_staffId))
                    return false;
                if (this.staffId != that.staffId)
                    return false;
            }

            boolean this_present_startTimeMills = true;
            boolean that_present_startTimeMills = true;
            if (this_present_startTimeMills || that_present_startTimeMills) {
                if (!(this_present_startTimeMills && that_present_startTimeMills))
                    return false;
                if (this.startTimeMills != that.startTimeMills)
                    return false;
            }

            boolean this_present_endTimeMills = true;
            boolean that_present_endTimeMills = true;
            if (this_present_endTimeMills || that_present_endTimeMills) {
                if (!(this_present_endTimeMills && that_present_endTimeMills))
                    return false;
                if (this.endTimeMills != that.endTimeMills)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetCompanyInfo()) ? 131071 : 524287);
            if (isSetCompanyInfo())
                hashCode = hashCode * 8191 + companyInfo.hashCode();

            hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(staffId);

            hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(startTimeMills);

            hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(endTimeMills);

            return hashCode;
        }

        @Override
        public int compareTo(signNowIfNotSignedInPeriod_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetCompanyInfo()).compareTo(other.isSetCompanyInfo());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompanyInfo()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyInfo, other.companyInfo);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetStaffId()).compareTo(other.isSetStaffId());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetStaffId()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.staffId, other.staffId);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetStartTimeMills()).compareTo(other.isSetStartTimeMills());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetStartTimeMills()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTimeMills, other.startTimeMills);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetEndTimeMills()).compareTo(other.isSetEndTimeMills());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetEndTimeMills()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTimeMills, other.endTimeMills);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        @org.apache.thrift.annotation.Nullable
        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("signNowIfNotSignedInPeriod_args(");
            boolean first = true;

            sb.append("companyInfo:");
            if (this.companyInfo == null) {
                sb.append("null");
            } else {
                sb.append(this.companyInfo);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("staffId:");
            sb.append(this.staffId);
            first = false;
            if (!first) sb.append(", ");
            sb.append("startTimeMills:");
            sb.append(this.startTimeMills);
            first = false;
            if (!first) sb.append(", ");
            sb.append("endTimeMills:");
            sb.append(this.endTimeMills);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (companyInfo != null) {
                companyInfo.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class signNowIfNotSignedInPeriod_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public signNowIfNotSignedInPeriod_argsStandardScheme getScheme() {
                return new signNowIfNotSignedInPeriod_argsStandardScheme();
            }
        }

        private static class signNowIfNotSignedInPeriod_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<signNowIfNotSignedInPeriod_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, signNowIfNotSignedInPeriod_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true) {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // COMPANY_INFO
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                                struct.companyInfo.read(iprot);
                                struct.setCompanyInfoIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // STAFF_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                                struct.staffId = iprot.readI64();
                                struct.setStaffIdIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 3: // START_TIME_MILLS
                            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                                struct.startTimeMills = iprot.readI64();
                                struct.setStartTimeMillsIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 4: // END_TIME_MILLS
                            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                                struct.endTimeMills = iprot.readI64();
                                struct.setEndTimeMillsIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, signNowIfNotSignedInPeriod_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.companyInfo != null) {
                    oprot.writeFieldBegin(COMPANY_INFO_FIELD_DESC);
                    struct.companyInfo.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldBegin(STAFF_ID_FIELD_DESC);
                oprot.writeI64(struct.staffId);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(START_TIME_MILLS_FIELD_DESC);
                oprot.writeI64(struct.startTimeMills);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(END_TIME_MILLS_FIELD_DESC);
                oprot.writeI64(struct.endTimeMills);
                oprot.writeFieldEnd();
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class signNowIfNotSignedInPeriod_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public signNowIfNotSignedInPeriod_argsTupleScheme getScheme() {
                return new signNowIfNotSignedInPeriod_argsTupleScheme();
            }
        }

        private static class signNowIfNotSignedInPeriod_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<signNowIfNotSignedInPeriod_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, signNowIfNotSignedInPeriod_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetCompanyInfo()) {
                    optionals.set(0);
                }
                if (struct.isSetStaffId()) {
                    optionals.set(1);
                }
                if (struct.isSetStartTimeMills()) {
                    optionals.set(2);
                }
                if (struct.isSetEndTimeMills()) {
                    optionals.set(3);
                }
                oprot.writeBitSet(optionals, 4);
                if (struct.isSetCompanyInfo()) {
                    struct.companyInfo.write(oprot);
                }
                if (struct.isSetStaffId()) {
                    oprot.writeI64(struct.staffId);
                }
                if (struct.isSetStartTimeMills()) {
                    oprot.writeI64(struct.startTimeMills);
                }
                if (struct.isSetEndTimeMills()) {
                    oprot.writeI64(struct.endTimeMills);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, signNowIfNotSignedInPeriod_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(4);
                if (incoming.get(0)) {
                    struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                    struct.companyInfo.read(iprot);
                    struct.setCompanyInfoIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.staffId = iprot.readI64();
                    struct.setStaffIdIsSet(true);
                }
                if (incoming.get(2)) {
                    struct.startTimeMills = iprot.readI64();
                    struct.setStartTimeMillsIsSet(true);
                }
                if (incoming.get(3)) {
                    struct.endTimeMills = iprot.readI64();
                    struct.setEndTimeMillsIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class signNowIfNotSignedInPeriod_result implements org.apache.thrift.TBase<signNowIfNotSignedInPeriod_result, signNowIfNotSignedInPeriod_result._Fields>, java.io.Serializable, Cloneable, Comparable<signNowIfNotSignedInPeriod_result> {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("signNowIfNotSignedInPeriod_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short) 0);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new signNowIfNotSignedInPeriod_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new signNowIfNotSignedInPeriod_resultTupleSchemeFactory();

        public boolean success; // required

        /**
         * The set of fields this struct contains, along with convenience methods for finding and manipulating them.
         */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short) 0, "success");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByThriftId(int fieldId) {
                switch (fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null)
                    throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __SUCCESS_ISSET_ID = 0;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(signNowIfNotSignedInPeriod_result.class, metaDataMap);
        }

        public signNowIfNotSignedInPeriod_result() {
        }

        public signNowIfNotSignedInPeriod_result(
                boolean success) {
            this();
            this.success = success;
            setSuccessIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public signNowIfNotSignedInPeriod_result(signNowIfNotSignedInPeriod_result other) {
            __isset_bitfield = other.__isset_bitfield;
            this.success = other.success;
        }

        public signNowIfNotSignedInPeriod_result deepCopy() {
            return new signNowIfNotSignedInPeriod_result(this);
        }

        @Override
        public void clear() {
            setSuccessIsSet(false);
            this.success = false;
        }

        public boolean isSuccess() {
            return this.success;
        }

        public signNowIfNotSignedInPeriod_result setSuccess(boolean success) {
            this.success = success;
            setSuccessIsSet(true);
            return this;
        }

        public void unsetSuccess() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
        }

        /**
         * Returns true if field success is set (has been assigned a value) and false otherwise
         */
        public boolean isSetSuccess() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
        }

        public void setSuccessIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((java.lang.Boolean) value);
                    }
                    break;

            }
        }

        @org.apache.thrift.annotation.Nullable
        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return isSuccess();

            }
            throw new java.lang.IllegalStateException();
        }

        /**
         * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
         */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof signNowIfNotSignedInPeriod_result)
                return this.equals((signNowIfNotSignedInPeriod_result) that);
            return false;
        }

        public boolean equals(signNowIfNotSignedInPeriod_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true;
            boolean that_present_success = true;
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (this.success != that.success)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((success) ? 131071 : 524287);

            return hashCode;
        }

        @Override
        public int compareTo(signNowIfNotSignedInPeriod_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        @org.apache.thrift.annotation.Nullable
        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("signNowIfNotSignedInPeriod_result(");
            boolean first = true;

            sb.append("success:");
            sb.append(this.success);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class signNowIfNotSignedInPeriod_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public signNowIfNotSignedInPeriod_resultStandardScheme getScheme() {
                return new signNowIfNotSignedInPeriod_resultStandardScheme();
            }
        }

        private static class signNowIfNotSignedInPeriod_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<signNowIfNotSignedInPeriod_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, signNowIfNotSignedInPeriod_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true) {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                                struct.success = iprot.readBool();
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, signNowIfNotSignedInPeriod_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.isSetSuccess()) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    oprot.writeBool(struct.success);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class signNowIfNotSignedInPeriod_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public signNowIfNotSignedInPeriod_resultTupleScheme getScheme() {
                return new signNowIfNotSignedInPeriod_resultTupleScheme();
            }
        }

        private static class signNowIfNotSignedInPeriod_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<signNowIfNotSignedInPeriod_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, signNowIfNotSignedInPeriod_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                oprot.writeBitSet(optionals, 1);
                if (struct.isSetSuccess()) {
                    oprot.writeBool(struct.success);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, signNowIfNotSignedInPeriod_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(1);
                if (incoming.get(0)) {
                    struct.success = iprot.readBool();
                    struct.setSuccessIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class getSignList_args implements org.apache.thrift.TBase<getSignList_args, getSignList_args._Fields>, java.io.Serializable, Cloneable, Comparable<getSignList_args> {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getSignList_args");

        private static final org.apache.thrift.protocol.TField COMPANY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyInfo", org.apache.thrift.protocol.TType.STRUCT, (short) 1);
        private static final org.apache.thrift.protocol.TField STAFF_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("staffId", org.apache.thrift.protocol.TType.I64, (short) 2);
        private static final org.apache.thrift.protocol.TField START_TIME_MILLS_FIELD_DESC = new org.apache.thrift.protocol.TField("startTimeMills", org.apache.thrift.protocol.TType.I64, (short) 3);
        private static final org.apache.thrift.protocol.TField END_TIME_MILLS_FIELD_DESC = new org.apache.thrift.protocol.TField("endTimeMills", org.apache.thrift.protocol.TType.I64, (short) 4);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getSignList_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getSignList_argsTupleSchemeFactory();

        public @org.apache.thrift.annotation.Nullable
        com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo; // required
        public long staffId; // required
        public long startTimeMills; // required
        public long endTimeMills; // required

        /**
         * The set of fields this struct contains, along with convenience methods for finding and manipulating them.
         */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            COMPANY_INFO((short) 1, "companyInfo"),
            STAFF_ID((short) 2, "staffId"),
            START_TIME_MILLS((short) 3, "startTimeMills"),
            END_TIME_MILLS((short) 4, "endTimeMills");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByThriftId(int fieldId) {
                switch (fieldId) {
                    case 1: // COMPANY_INFO
                        return COMPANY_INFO;
                    case 2: // STAFF_ID
                        return STAFF_ID;
                    case 3: // START_TIME_MILLS
                        return START_TIME_MILLS;
                    case 4: // END_TIME_MILLS
                        return END_TIME_MILLS;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null)
                    throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __STAFFID_ISSET_ID = 0;
        private static final int __STARTTIMEMILLS_ISSET_ID = 1;
        private static final int __ENDTIMEMILLS_ISSET_ID = 2;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.COMPANY_INFO, new org.apache.thrift.meta_data.FieldMetaData("companyInfo", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.CompanyInfo.class)));
            tmpMap.put(_Fields.STAFF_ID, new org.apache.thrift.meta_data.FieldMetaData("staffId", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
            tmpMap.put(_Fields.START_TIME_MILLS, new org.apache.thrift.meta_data.FieldMetaData("startTimeMills", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
            tmpMap.put(_Fields.END_TIME_MILLS, new org.apache.thrift.meta_data.FieldMetaData("endTimeMills", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getSignList_args.class, metaDataMap);
        }

        public getSignList_args() {
        }

        public getSignList_args(
                com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo,
                long staffId,
                long startTimeMills,
                long endTimeMills) {
            this();
            this.companyInfo = companyInfo;
            this.staffId = staffId;
            setStaffIdIsSet(true);
            this.startTimeMills = startTimeMills;
            setStartTimeMillsIsSet(true);
            this.endTimeMills = endTimeMills;
            setEndTimeMillsIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public getSignList_args(getSignList_args other) {
            __isset_bitfield = other.__isset_bitfield;
            if (other.isSetCompanyInfo()) {
                this.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo(other.companyInfo);
            }
            this.staffId = other.staffId;
            this.startTimeMills = other.startTimeMills;
            this.endTimeMills = other.endTimeMills;
        }

        public getSignList_args deepCopy() {
            return new getSignList_args(this);
        }

        @Override
        public void clear() {
            this.companyInfo = null;
            setStaffIdIsSet(false);
            this.staffId = 0;
            setStartTimeMillsIsSet(false);
            this.startTimeMills = 0;
            setEndTimeMillsIsSet(false);
            this.endTimeMills = 0;
        }

        @org.apache.thrift.annotation.Nullable
        public com.aries.department.athena.contract.thrift.dto.CompanyInfo getCompanyInfo() {
            return this.companyInfo;
        }

        public getSignList_args setCompanyInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo) {
            this.companyInfo = companyInfo;
            return this;
        }

        public void unsetCompanyInfo() {
            this.companyInfo = null;
        }

        /**
         * Returns true if field companyInfo is set (has been assigned a value) and false otherwise
         */
        public boolean isSetCompanyInfo() {
            return this.companyInfo != null;
        }

        public void setCompanyInfoIsSet(boolean value) {
            if (!value) {
                this.companyInfo = null;
            }
        }

        public long getStaffId() {
            return this.staffId;
        }

        public getSignList_args setStaffId(long staffId) {
            this.staffId = staffId;
            setStaffIdIsSet(true);
            return this;
        }

        public void unsetStaffId() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STAFFID_ISSET_ID);
        }

        /**
         * Returns true if field staffId is set (has been assigned a value) and false otherwise
         */
        public boolean isSetStaffId() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STAFFID_ISSET_ID);
        }

        public void setStaffIdIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STAFFID_ISSET_ID, value);
        }

        public long getStartTimeMills() {
            return this.startTimeMills;
        }

        public getSignList_args setStartTimeMills(long startTimeMills) {
            this.startTimeMills = startTimeMills;
            setStartTimeMillsIsSet(true);
            return this;
        }

        public void unsetStartTimeMills() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STARTTIMEMILLS_ISSET_ID);
        }

        /**
         * Returns true if field startTimeMills is set (has been assigned a value) and false otherwise
         */
        public boolean isSetStartTimeMills() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STARTTIMEMILLS_ISSET_ID);
        }

        public void setStartTimeMillsIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STARTTIMEMILLS_ISSET_ID, value);
        }

        public long getEndTimeMills() {
            return this.endTimeMills;
        }

        public getSignList_args setEndTimeMills(long endTimeMills) {
            this.endTimeMills = endTimeMills;
            setEndTimeMillsIsSet(true);
            return this;
        }

        public void unsetEndTimeMills() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ENDTIMEMILLS_ISSET_ID);
        }

        /**
         * Returns true if field endTimeMills is set (has been assigned a value) and false otherwise
         */
        public boolean isSetEndTimeMills() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ENDTIMEMILLS_ISSET_ID);
        }

        public void setEndTimeMillsIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ENDTIMEMILLS_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
            switch (field) {
                case COMPANY_INFO:
                    if (value == null) {
                        unsetCompanyInfo();
                    } else {
                        setCompanyInfo((com.aries.department.athena.contract.thrift.dto.CompanyInfo) value);
                    }
                    break;

                case STAFF_ID:
                    if (value == null) {
                        unsetStaffId();
                    } else {
                        setStaffId((java.lang.Long) value);
                    }
                    break;

                case START_TIME_MILLS:
                    if (value == null) {
                        unsetStartTimeMills();
                    } else {
                        setStartTimeMills((java.lang.Long) value);
                    }
                    break;

                case END_TIME_MILLS:
                    if (value == null) {
                        unsetEndTimeMills();
                    } else {
                        setEndTimeMills((java.lang.Long) value);
                    }
                    break;

            }
        }

        @org.apache.thrift.annotation.Nullable
        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case COMPANY_INFO:
                    return getCompanyInfo();

                case STAFF_ID:
                    return getStaffId();

                case START_TIME_MILLS:
                    return getStartTimeMills();

                case END_TIME_MILLS:
                    return getEndTimeMills();

            }
            throw new java.lang.IllegalStateException();
        }

        /**
         * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
         */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case COMPANY_INFO:
                    return isSetCompanyInfo();
                case STAFF_ID:
                    return isSetStaffId();
                case START_TIME_MILLS:
                    return isSetStartTimeMills();
                case END_TIME_MILLS:
                    return isSetEndTimeMills();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof getSignList_args)
                return this.equals((getSignList_args) that);
            return false;
        }

        public boolean equals(getSignList_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_companyInfo = true && this.isSetCompanyInfo();
            boolean that_present_companyInfo = true && that.isSetCompanyInfo();
            if (this_present_companyInfo || that_present_companyInfo) {
                if (!(this_present_companyInfo && that_present_companyInfo))
                    return false;
                if (!this.companyInfo.equals(that.companyInfo))
                    return false;
            }

            boolean this_present_staffId = true;
            boolean that_present_staffId = true;
            if (this_present_staffId || that_present_staffId) {
                if (!(this_present_staffId && that_present_staffId))
                    return false;
                if (this.staffId != that.staffId)
                    return false;
            }

            boolean this_present_startTimeMills = true;
            boolean that_present_startTimeMills = true;
            if (this_present_startTimeMills || that_present_startTimeMills) {
                if (!(this_present_startTimeMills && that_present_startTimeMills))
                    return false;
                if (this.startTimeMills != that.startTimeMills)
                    return false;
            }

            boolean this_present_endTimeMills = true;
            boolean that_present_endTimeMills = true;
            if (this_present_endTimeMills || that_present_endTimeMills) {
                if (!(this_present_endTimeMills && that_present_endTimeMills))
                    return false;
                if (this.endTimeMills != that.endTimeMills)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetCompanyInfo()) ? 131071 : 524287);
            if (isSetCompanyInfo())
                hashCode = hashCode * 8191 + companyInfo.hashCode();

            hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(staffId);

            hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(startTimeMills);

            hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(endTimeMills);

            return hashCode;
        }

        @Override
        public int compareTo(getSignList_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetCompanyInfo()).compareTo(other.isSetCompanyInfo());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompanyInfo()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyInfo, other.companyInfo);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetStaffId()).compareTo(other.isSetStaffId());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetStaffId()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.staffId, other.staffId);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetStartTimeMills()).compareTo(other.isSetStartTimeMills());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetStartTimeMills()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTimeMills, other.startTimeMills);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetEndTimeMills()).compareTo(other.isSetEndTimeMills());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetEndTimeMills()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTimeMills, other.endTimeMills);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        @org.apache.thrift.annotation.Nullable
        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("getSignList_args(");
            boolean first = true;

            sb.append("companyInfo:");
            if (this.companyInfo == null) {
                sb.append("null");
            } else {
                sb.append(this.companyInfo);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("staffId:");
            sb.append(this.staffId);
            first = false;
            if (!first) sb.append(", ");
            sb.append("startTimeMills:");
            sb.append(this.startTimeMills);
            first = false;
            if (!first) sb.append(", ");
            sb.append("endTimeMills:");
            sb.append(this.endTimeMills);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (companyInfo != null) {
                companyInfo.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class getSignList_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getSignList_argsStandardScheme getScheme() {
                return new getSignList_argsStandardScheme();
            }
        }

        private static class getSignList_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getSignList_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, getSignList_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true) {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // COMPANY_INFO
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                                struct.companyInfo.read(iprot);
                                struct.setCompanyInfoIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // STAFF_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                                struct.staffId = iprot.readI64();
                                struct.setStaffIdIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 3: // START_TIME_MILLS
                            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                                struct.startTimeMills = iprot.readI64();
                                struct.setStartTimeMillsIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 4: // END_TIME_MILLS
                            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                                struct.endTimeMills = iprot.readI64();
                                struct.setEndTimeMillsIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, getSignList_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.companyInfo != null) {
                    oprot.writeFieldBegin(COMPANY_INFO_FIELD_DESC);
                    struct.companyInfo.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldBegin(STAFF_ID_FIELD_DESC);
                oprot.writeI64(struct.staffId);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(START_TIME_MILLS_FIELD_DESC);
                oprot.writeI64(struct.startTimeMills);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(END_TIME_MILLS_FIELD_DESC);
                oprot.writeI64(struct.endTimeMills);
                oprot.writeFieldEnd();
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class getSignList_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getSignList_argsTupleScheme getScheme() {
                return new getSignList_argsTupleScheme();
            }
        }

        private static class getSignList_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getSignList_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, getSignList_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetCompanyInfo()) {
                    optionals.set(0);
                }
                if (struct.isSetStaffId()) {
                    optionals.set(1);
                }
                if (struct.isSetStartTimeMills()) {
                    optionals.set(2);
                }
                if (struct.isSetEndTimeMills()) {
                    optionals.set(3);
                }
                oprot.writeBitSet(optionals, 4);
                if (struct.isSetCompanyInfo()) {
                    struct.companyInfo.write(oprot);
                }
                if (struct.isSetStaffId()) {
                    oprot.writeI64(struct.staffId);
                }
                if (struct.isSetStartTimeMills()) {
                    oprot.writeI64(struct.startTimeMills);
                }
                if (struct.isSetEndTimeMills()) {
                    oprot.writeI64(struct.endTimeMills);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, getSignList_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(4);
                if (incoming.get(0)) {
                    struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                    struct.companyInfo.read(iprot);
                    struct.setCompanyInfoIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.staffId = iprot.readI64();
                    struct.setStaffIdIsSet(true);
                }
                if (incoming.get(2)) {
                    struct.startTimeMills = iprot.readI64();
                    struct.setStartTimeMillsIsSet(true);
                }
                if (incoming.get(3)) {
                    struct.endTimeMills = iprot.readI64();
                    struct.setEndTimeMillsIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class getSignList_result implements org.apache.thrift.TBase<getSignList_result, getSignList_result._Fields>, java.io.Serializable, Cloneable, Comparable<getSignList_result> {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getSignList_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short) 0);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getSignList_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getSignList_resultTupleSchemeFactory();

        public @org.apache.thrift.annotation.Nullable
        java.util.List<java.lang.Long> success; // required

        /**
         * The set of fields this struct contains, along with convenience methods for finding and manipulating them.
         */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short) 0, "success");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByThriftId(int fieldId) {
                switch (fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null)
                    throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            @org.apache.thrift.annotation.Nullable
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
                            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getSignList_result.class, metaDataMap);
        }

        public getSignList_result() {
        }

        public getSignList_result(
                java.util.List<java.lang.Long> success) {
            this();
            this.success = success;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public getSignList_result(getSignList_result other) {
            if (other.isSetSuccess()) {
                java.util.List<java.lang.Long> __this__success = new java.util.ArrayList<java.lang.Long>(other.success);
                this.success = __this__success;
            }
        }

        public getSignList_result deepCopy() {
            return new getSignList_result(this);
        }

        @Override
        public void clear() {
            this.success = null;
        }

        public int getSuccessSize() {
            return (this.success == null) ? 0 : this.success.size();
        }

        @org.apache.thrift.annotation.Nullable
        public java.util.Iterator<java.lang.Long> getSuccessIterator() {
            return (this.success == null) ? null : this.success.iterator();
        }

        public void addToSuccess(long elem) {
            if (this.success == null) {
                this.success = new java.util.ArrayList<java.lang.Long>();
            }
            this.success.add(elem);
        }

        @org.apache.thrift.annotation.Nullable
        public java.util.List<java.lang.Long> getSuccess() {
            return this.success;
        }

        public getSignList_result setSuccess(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Long> success) {
            this.success = success;
            return this;
        }

        public void unsetSuccess() {
            this.success = null;
        }

        /**
         * Returns true if field success is set (has been assigned a value) and false otherwise
         */
        public boolean isSetSuccess() {
            return this.success != null;
        }

        public void setSuccessIsSet(boolean value) {
            if (!value) {
                this.success = null;
            }
        }

        public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((java.util.List<java.lang.Long>) value);
                    }
                    break;

            }
        }

        @org.apache.thrift.annotation.Nullable
        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return getSuccess();

            }
            throw new java.lang.IllegalStateException();
        }

        /**
         * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
         */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof getSignList_result)
                return this.equals((getSignList_result) that);
            return false;
        }

        public boolean equals(getSignList_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true && this.isSetSuccess();
            boolean that_present_success = true && that.isSetSuccess();
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (!this.success.equals(that.success))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
            if (isSetSuccess())
                hashCode = hashCode * 8191 + success.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(getSignList_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        @org.apache.thrift.annotation.Nullable
        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("getSignList_result(");
            boolean first = true;

            sb.append("success:");
            if (this.success == null) {
                sb.append("null");
            } else {
                sb.append(this.success);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class getSignList_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getSignList_resultStandardScheme getScheme() {
                return new getSignList_resultStandardScheme();
            }
        }

        private static class getSignList_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getSignList_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, getSignList_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true) {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                                {
                                    org.apache.thrift.protocol.TList _list48 = iprot.readListBegin();
                                    struct.success = new java.util.ArrayList<java.lang.Long>(_list48.size);
                                    long _elem49;
                                    for (int _i50 = 0; _i50 < _list48.size; ++_i50) {
                                        _elem49 = iprot.readI64();
                                        struct.success.add(_elem49);
                                    }
                                    iprot.readListEnd();
                                }
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, getSignList_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.success != null) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    {
                        oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.success.size()));
                        for (long _iter51 : struct.success) {
                            oprot.writeI64(_iter51);
                        }
                        oprot.writeListEnd();
                    }
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class getSignList_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getSignList_resultTupleScheme getScheme() {
                return new getSignList_resultTupleScheme();
            }
        }

        private static class getSignList_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getSignList_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, getSignList_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                oprot.writeBitSet(optionals, 1);
                if (struct.isSetSuccess()) {
                    {
                        oprot.writeI32(struct.success.size());
                        for (long _iter52 : struct.success) {
                            oprot.writeI64(_iter52);
                        }
                    }
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, getSignList_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(1);
                if (incoming.get(0)) {
                    {
                        org.apache.thrift.protocol.TList _list53 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
                        struct.success = new java.util.ArrayList<java.lang.Long>(_list53.size);
                        long _elem54;
                        for (int _i55 = 0; _i55 < _list53.size; ++_i55) {
                            _elem54 = iprot.readI64();
                            struct.success.add(_elem54);
                        }
                    }
                    struct.setSuccessIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

}
