/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.aries.department.athena.contract.thrift.service;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-05-06")
public class StaffService {

  public interface Iface {

    public java.lang.String ping() throws org.apache.thrift.TException;

    public com.aries.department.athena.contract.thrift.dto.AthenaResponse addStaff(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo) throws org.apache.thrift.TException;

    public com.aries.department.athena.contract.thrift.dto.StaffInfo getStaffById(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, int id) throws org.apache.thrift.TException;

    public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> getStaffByName(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String name) throws org.apache.thrift.TException;

    public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> getStaffByPinyin(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String pinyin) throws org.apache.thrift.TException;

    public com.aries.department.athena.contract.thrift.dto.StaffInfo getLastStaffBypinyin(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String pinyin) throws org.apache.thrift.TException;

    public com.aries.department.athena.contract.thrift.dto.AthenaResponse updateStaffById(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long id, com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo) throws org.apache.thrift.TException;

    public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> getStaffByDepartmentId(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long departmentId, int pageNum, int pageSize) throws org.apache.thrift.TException;

    public long getStaffCountByDepartmentId(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long departmentId) throws org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void ping(org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException;

    public void addStaff(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.AthenaResponse> resultHandler) throws org.apache.thrift.TException;

    public void getStaffById(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, int id, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.StaffInfo> resultHandler) throws org.apache.thrift.TException;

    public void getStaffByName(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String name, org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> resultHandler) throws org.apache.thrift.TException;

    public void getStaffByPinyin(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String pinyin, org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> resultHandler) throws org.apache.thrift.TException;

    public void getLastStaffBypinyin(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String pinyin, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.StaffInfo> resultHandler) throws org.apache.thrift.TException;

    public void updateStaffById(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long id, com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.AthenaResponse> resultHandler) throws org.apache.thrift.TException;

    public void getStaffByDepartmentId(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long departmentId, int pageNum, int pageSize, org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> resultHandler) throws org.apache.thrift.TException;

    public void getStaffCountByDepartmentId(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long departmentId, org.apache.thrift.async.AsyncMethodCallback<java.lang.Long> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public java.lang.String ping() throws org.apache.thrift.TException
    {
      send_ping();
      return recv_ping();
    }

    public void send_ping() throws org.apache.thrift.TException
    {
      ping_args args = new ping_args();
      sendBase("ping", args);
    }

    public java.lang.String recv_ping() throws org.apache.thrift.TException
    {
      ping_result result = new ping_result();
      receiveBase(result, "ping");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "ping failed: unknown result");
    }

    public com.aries.department.athena.contract.thrift.dto.AthenaResponse addStaff(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo) throws org.apache.thrift.TException
    {
      send_addStaff(companyInfo, staffInfo);
      return recv_addStaff();
    }

    public void send_addStaff(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo) throws org.apache.thrift.TException
    {
      addStaff_args args = new addStaff_args();
      args.setCompanyInfo(companyInfo);
      args.setStaffInfo(staffInfo);
      sendBase("addStaff", args);
    }

    public com.aries.department.athena.contract.thrift.dto.AthenaResponse recv_addStaff() throws org.apache.thrift.TException
    {
      addStaff_result result = new addStaff_result();
      receiveBase(result, "addStaff");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addStaff failed: unknown result");
    }

    public com.aries.department.athena.contract.thrift.dto.StaffInfo getStaffById(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, int id) throws org.apache.thrift.TException
    {
      send_getStaffById(companyInfo, id);
      return recv_getStaffById();
    }

    public void send_getStaffById(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, int id) throws org.apache.thrift.TException
    {
      getStaffById_args args = new getStaffById_args();
      args.setCompanyInfo(companyInfo);
      args.setId(id);
      sendBase("getStaffById", args);
    }

    public com.aries.department.athena.contract.thrift.dto.StaffInfo recv_getStaffById() throws org.apache.thrift.TException
    {
      getStaffById_result result = new getStaffById_result();
      receiveBase(result, "getStaffById");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getStaffById failed: unknown result");
    }

    public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> getStaffByName(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String name) throws org.apache.thrift.TException
    {
      send_getStaffByName(companyInfo, name);
      return recv_getStaffByName();
    }

    public void send_getStaffByName(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String name) throws org.apache.thrift.TException
    {
      getStaffByName_args args = new getStaffByName_args();
      args.setCompanyInfo(companyInfo);
      args.setName(name);
      sendBase("getStaffByName", args);
    }

    public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> recv_getStaffByName() throws org.apache.thrift.TException
    {
      getStaffByName_result result = new getStaffByName_result();
      receiveBase(result, "getStaffByName");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getStaffByName failed: unknown result");
    }

    public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> getStaffByPinyin(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String pinyin) throws org.apache.thrift.TException
    {
      send_getStaffByPinyin(companyInfo, pinyin);
      return recv_getStaffByPinyin();
    }

    public void send_getStaffByPinyin(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String pinyin) throws org.apache.thrift.TException
    {
      getStaffByPinyin_args args = new getStaffByPinyin_args();
      args.setCompanyInfo(companyInfo);
      args.setPinyin(pinyin);
      sendBase("getStaffByPinyin", args);
    }

    public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> recv_getStaffByPinyin() throws org.apache.thrift.TException
    {
      getStaffByPinyin_result result = new getStaffByPinyin_result();
      receiveBase(result, "getStaffByPinyin");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getStaffByPinyin failed: unknown result");
    }

    public com.aries.department.athena.contract.thrift.dto.StaffInfo getLastStaffBypinyin(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String pinyin) throws org.apache.thrift.TException
    {
      send_getLastStaffBypinyin(companyInfo, pinyin);
      return recv_getLastStaffBypinyin();
    }

    public void send_getLastStaffBypinyin(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String pinyin) throws org.apache.thrift.TException
    {
      getLastStaffBypinyin_args args = new getLastStaffBypinyin_args();
      args.setCompanyInfo(companyInfo);
      args.setPinyin(pinyin);
      sendBase("getLastStaffBypinyin", args);
    }

    public com.aries.department.athena.contract.thrift.dto.StaffInfo recv_getLastStaffBypinyin() throws org.apache.thrift.TException
    {
      getLastStaffBypinyin_result result = new getLastStaffBypinyin_result();
      receiveBase(result, "getLastStaffBypinyin");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getLastStaffBypinyin failed: unknown result");
    }

    public com.aries.department.athena.contract.thrift.dto.AthenaResponse updateStaffById(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long id, com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo) throws org.apache.thrift.TException
    {
      send_updateStaffById(companyInfo, id, staffInfo);
      return recv_updateStaffById();
    }

    public void send_updateStaffById(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long id, com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo) throws org.apache.thrift.TException
    {
      updateStaffById_args args = new updateStaffById_args();
      args.setCompanyInfo(companyInfo);
      args.setId(id);
      args.setStaffInfo(staffInfo);
      sendBase("updateStaffById", args);
    }

    public com.aries.department.athena.contract.thrift.dto.AthenaResponse recv_updateStaffById() throws org.apache.thrift.TException
    {
      updateStaffById_result result = new updateStaffById_result();
      receiveBase(result, "updateStaffById");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateStaffById failed: unknown result");
    }

    public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> getStaffByDepartmentId(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long departmentId, int pageNum, int pageSize) throws org.apache.thrift.TException
    {
      send_getStaffByDepartmentId(companyInfo, departmentId, pageNum, pageSize);
      return recv_getStaffByDepartmentId();
    }

    public void send_getStaffByDepartmentId(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long departmentId, int pageNum, int pageSize) throws org.apache.thrift.TException
    {
      getStaffByDepartmentId_args args = new getStaffByDepartmentId_args();
      args.setCompanyInfo(companyInfo);
      args.setDepartmentId(departmentId);
      args.setPageNum(pageNum);
      args.setPageSize(pageSize);
      sendBase("getStaffByDepartmentId", args);
    }

    public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> recv_getStaffByDepartmentId() throws org.apache.thrift.TException
    {
      getStaffByDepartmentId_result result = new getStaffByDepartmentId_result();
      receiveBase(result, "getStaffByDepartmentId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getStaffByDepartmentId failed: unknown result");
    }

    public long getStaffCountByDepartmentId(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long departmentId) throws org.apache.thrift.TException
    {
      send_getStaffCountByDepartmentId(companyInfo, departmentId);
      return recv_getStaffCountByDepartmentId();
    }

    public void send_getStaffCountByDepartmentId(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long departmentId) throws org.apache.thrift.TException
    {
      getStaffCountByDepartmentId_args args = new getStaffCountByDepartmentId_args();
      args.setCompanyInfo(companyInfo);
      args.setDepartmentId(departmentId);
      sendBase("getStaffCountByDepartmentId", args);
    }

    public long recv_getStaffCountByDepartmentId() throws org.apache.thrift.TException
    {
      getStaffCountByDepartmentId_result result = new getStaffCountByDepartmentId_result();
      receiveBase(result, "getStaffCountByDepartmentId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getStaffCountByDepartmentId failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void ping(org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      ping_call method_call = new ping_call(resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class ping_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.String> {
      public ping_call(org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("ping", org.apache.thrift.protocol.TMessageType.CALL, 0));
        ping_args args = new ping_args();
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.String getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_ping();
      }
    }

    public void addStaff(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.AthenaResponse> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      addStaff_call method_call = new addStaff_call(companyInfo, staffInfo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class addStaff_call extends org.apache.thrift.async.TAsyncMethodCall<com.aries.department.athena.contract.thrift.dto.AthenaResponse> {
      private com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo;
      private com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo;
      public addStaff_call(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.AthenaResponse> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.companyInfo = companyInfo;
        this.staffInfo = staffInfo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addStaff", org.apache.thrift.protocol.TMessageType.CALL, 0));
        addStaff_args args = new addStaff_args();
        args.setCompanyInfo(companyInfo);
        args.setStaffInfo(staffInfo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.aries.department.athena.contract.thrift.dto.AthenaResponse getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_addStaff();
      }
    }

    public void getStaffById(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, int id, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.StaffInfo> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getStaffById_call method_call = new getStaffById_call(companyInfo, id, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getStaffById_call extends org.apache.thrift.async.TAsyncMethodCall<com.aries.department.athena.contract.thrift.dto.StaffInfo> {
      private com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo;
      private int id;
      public getStaffById_call(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, int id, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.StaffInfo> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.companyInfo = companyInfo;
        this.id = id;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getStaffById", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getStaffById_args args = new getStaffById_args();
        args.setCompanyInfo(companyInfo);
        args.setId(id);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.aries.department.athena.contract.thrift.dto.StaffInfo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getStaffById();
      }
    }

    public void getStaffByName(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String name, org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getStaffByName_call method_call = new getStaffByName_call(companyInfo, name, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getStaffByName_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> {
      private com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo;
      private java.lang.String name;
      public getStaffByName_call(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String name, org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.companyInfo = companyInfo;
        this.name = name;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getStaffByName", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getStaffByName_args args = new getStaffByName_args();
        args.setCompanyInfo(companyInfo);
        args.setName(name);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getStaffByName();
      }
    }

    public void getStaffByPinyin(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String pinyin, org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getStaffByPinyin_call method_call = new getStaffByPinyin_call(companyInfo, pinyin, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getStaffByPinyin_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> {
      private com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo;
      private java.lang.String pinyin;
      public getStaffByPinyin_call(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String pinyin, org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.companyInfo = companyInfo;
        this.pinyin = pinyin;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getStaffByPinyin", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getStaffByPinyin_args args = new getStaffByPinyin_args();
        args.setCompanyInfo(companyInfo);
        args.setPinyin(pinyin);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getStaffByPinyin();
      }
    }

    public void getLastStaffBypinyin(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String pinyin, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.StaffInfo> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getLastStaffBypinyin_call method_call = new getLastStaffBypinyin_call(companyInfo, pinyin, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getLastStaffBypinyin_call extends org.apache.thrift.async.TAsyncMethodCall<com.aries.department.athena.contract.thrift.dto.StaffInfo> {
      private com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo;
      private java.lang.String pinyin;
      public getLastStaffBypinyin_call(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, java.lang.String pinyin, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.StaffInfo> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.companyInfo = companyInfo;
        this.pinyin = pinyin;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getLastStaffBypinyin", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getLastStaffBypinyin_args args = new getLastStaffBypinyin_args();
        args.setCompanyInfo(companyInfo);
        args.setPinyin(pinyin);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.aries.department.athena.contract.thrift.dto.StaffInfo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getLastStaffBypinyin();
      }
    }

    public void updateStaffById(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long id, com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.AthenaResponse> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateStaffById_call method_call = new updateStaffById_call(companyInfo, id, staffInfo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateStaffById_call extends org.apache.thrift.async.TAsyncMethodCall<com.aries.department.athena.contract.thrift.dto.AthenaResponse> {
      private com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo;
      private long id;
      private com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo;
      public updateStaffById_call(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long id, com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.AthenaResponse> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.companyInfo = companyInfo;
        this.id = id;
        this.staffInfo = staffInfo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateStaffById", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateStaffById_args args = new updateStaffById_args();
        args.setCompanyInfo(companyInfo);
        args.setId(id);
        args.setStaffInfo(staffInfo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.aries.department.athena.contract.thrift.dto.AthenaResponse getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateStaffById();
      }
    }

    public void getStaffByDepartmentId(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long departmentId, int pageNum, int pageSize, org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getStaffByDepartmentId_call method_call = new getStaffByDepartmentId_call(companyInfo, departmentId, pageNum, pageSize, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getStaffByDepartmentId_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> {
      private com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo;
      private long departmentId;
      private int pageNum;
      private int pageSize;
      public getStaffByDepartmentId_call(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long departmentId, int pageNum, int pageSize, org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.companyInfo = companyInfo;
        this.departmentId = departmentId;
        this.pageNum = pageNum;
        this.pageSize = pageSize;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getStaffByDepartmentId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getStaffByDepartmentId_args args = new getStaffByDepartmentId_args();
        args.setCompanyInfo(companyInfo);
        args.setDepartmentId(departmentId);
        args.setPageNum(pageNum);
        args.setPageSize(pageSize);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getStaffByDepartmentId();
      }
    }

    public void getStaffCountByDepartmentId(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long departmentId, org.apache.thrift.async.AsyncMethodCallback<java.lang.Long> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getStaffCountByDepartmentId_call method_call = new getStaffCountByDepartmentId_call(companyInfo, departmentId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getStaffCountByDepartmentId_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Long> {
      private com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo;
      private long departmentId;
      public getStaffCountByDepartmentId_call(com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo, long departmentId, org.apache.thrift.async.AsyncMethodCallback<java.lang.Long> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.companyInfo = companyInfo;
        this.departmentId = departmentId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getStaffCountByDepartmentId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getStaffCountByDepartmentId_args args = new getStaffCountByDepartmentId_args();
        args.setCompanyInfo(companyInfo);
        args.setDepartmentId(departmentId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.Long getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getStaffCountByDepartmentId();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("ping", new ping());
      processMap.put("addStaff", new addStaff());
      processMap.put("getStaffById", new getStaffById());
      processMap.put("getStaffByName", new getStaffByName());
      processMap.put("getStaffByPinyin", new getStaffByPinyin());
      processMap.put("getLastStaffBypinyin", new getLastStaffBypinyin());
      processMap.put("updateStaffById", new updateStaffById());
      processMap.put("getStaffByDepartmentId", new getStaffByDepartmentId());
      processMap.put("getStaffCountByDepartmentId", new getStaffCountByDepartmentId());
      return processMap;
    }

    public static class ping<I extends Iface> extends org.apache.thrift.ProcessFunction<I, ping_args> {
      public ping() {
        super("ping");
      }

      public ping_args getEmptyArgsInstance() {
        return new ping_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public ping_result getResult(I iface, ping_args args) throws org.apache.thrift.TException {
        ping_result result = new ping_result();
        result.success = iface.ping();
        return result;
      }
    }

    public static class addStaff<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addStaff_args> {
      public addStaff() {
        super("addStaff");
      }

      public addStaff_args getEmptyArgsInstance() {
        return new addStaff_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public addStaff_result getResult(I iface, addStaff_args args) throws org.apache.thrift.TException {
        addStaff_result result = new addStaff_result();
        result.success = iface.addStaff(args.companyInfo, args.staffInfo);
        return result;
      }
    }

    public static class getStaffById<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getStaffById_args> {
      public getStaffById() {
        super("getStaffById");
      }

      public getStaffById_args getEmptyArgsInstance() {
        return new getStaffById_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public getStaffById_result getResult(I iface, getStaffById_args args) throws org.apache.thrift.TException {
        getStaffById_result result = new getStaffById_result();
        result.success = iface.getStaffById(args.companyInfo, args.id);
        return result;
      }
    }

    public static class getStaffByName<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getStaffByName_args> {
      public getStaffByName() {
        super("getStaffByName");
      }

      public getStaffByName_args getEmptyArgsInstance() {
        return new getStaffByName_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public getStaffByName_result getResult(I iface, getStaffByName_args args) throws org.apache.thrift.TException {
        getStaffByName_result result = new getStaffByName_result();
        result.success = iface.getStaffByName(args.companyInfo, args.name);
        return result;
      }
    }

    public static class getStaffByPinyin<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getStaffByPinyin_args> {
      public getStaffByPinyin() {
        super("getStaffByPinyin");
      }

      public getStaffByPinyin_args getEmptyArgsInstance() {
        return new getStaffByPinyin_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public getStaffByPinyin_result getResult(I iface, getStaffByPinyin_args args) throws org.apache.thrift.TException {
        getStaffByPinyin_result result = new getStaffByPinyin_result();
        result.success = iface.getStaffByPinyin(args.companyInfo, args.pinyin);
        return result;
      }
    }

    public static class getLastStaffBypinyin<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getLastStaffBypinyin_args> {
      public getLastStaffBypinyin() {
        super("getLastStaffBypinyin");
      }

      public getLastStaffBypinyin_args getEmptyArgsInstance() {
        return new getLastStaffBypinyin_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public getLastStaffBypinyin_result getResult(I iface, getLastStaffBypinyin_args args) throws org.apache.thrift.TException {
        getLastStaffBypinyin_result result = new getLastStaffBypinyin_result();
        result.success = iface.getLastStaffBypinyin(args.companyInfo, args.pinyin);
        return result;
      }
    }

    public static class updateStaffById<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateStaffById_args> {
      public updateStaffById() {
        super("updateStaffById");
      }

      public updateStaffById_args getEmptyArgsInstance() {
        return new updateStaffById_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public updateStaffById_result getResult(I iface, updateStaffById_args args) throws org.apache.thrift.TException {
        updateStaffById_result result = new updateStaffById_result();
        result.success = iface.updateStaffById(args.companyInfo, args.id, args.staffInfo);
        return result;
      }
    }

    public static class getStaffByDepartmentId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getStaffByDepartmentId_args> {
      public getStaffByDepartmentId() {
        super("getStaffByDepartmentId");
      }

      public getStaffByDepartmentId_args getEmptyArgsInstance() {
        return new getStaffByDepartmentId_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public getStaffByDepartmentId_result getResult(I iface, getStaffByDepartmentId_args args) throws org.apache.thrift.TException {
        getStaffByDepartmentId_result result = new getStaffByDepartmentId_result();
        result.success = iface.getStaffByDepartmentId(args.companyInfo, args.departmentId, args.pageNum, args.pageSize);
        return result;
      }
    }

    public static class getStaffCountByDepartmentId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getStaffCountByDepartmentId_args> {
      public getStaffCountByDepartmentId() {
        super("getStaffCountByDepartmentId");
      }

      public getStaffCountByDepartmentId_args getEmptyArgsInstance() {
        return new getStaffCountByDepartmentId_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public getStaffCountByDepartmentId_result getResult(I iface, getStaffCountByDepartmentId_args args) throws org.apache.thrift.TException {
        getStaffCountByDepartmentId_result result = new getStaffCountByDepartmentId_result();
        result.success = iface.getStaffCountByDepartmentId(args.companyInfo, args.departmentId);
        result.setSuccessIsSet(true);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("ping", new ping());
      processMap.put("addStaff", new addStaff());
      processMap.put("getStaffById", new getStaffById());
      processMap.put("getStaffByName", new getStaffByName());
      processMap.put("getStaffByPinyin", new getStaffByPinyin());
      processMap.put("getLastStaffBypinyin", new getLastStaffBypinyin());
      processMap.put("updateStaffById", new updateStaffById());
      processMap.put("getStaffByDepartmentId", new getStaffByDepartmentId());
      processMap.put("getStaffCountByDepartmentId", new getStaffCountByDepartmentId());
      return processMap;
    }

    public static class ping<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, ping_args, java.lang.String> {
      public ping() {
        super("ping");
      }

      public ping_args getEmptyArgsInstance() {
        return new ping_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.String> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.String>() { 
          public void onComplete(java.lang.String o) {
            ping_result result = new ping_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            ping_result result = new ping_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, ping_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
        iface.ping(resultHandler);
      }
    }

    public static class addStaff<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addStaff_args, com.aries.department.athena.contract.thrift.dto.AthenaResponse> {
      public addStaff() {
        super("addStaff");
      }

      public addStaff_args getEmptyArgsInstance() {
        return new addStaff_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.AthenaResponse> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.AthenaResponse>() { 
          public void onComplete(com.aries.department.athena.contract.thrift.dto.AthenaResponse o) {
            addStaff_result result = new addStaff_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            addStaff_result result = new addStaff_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, addStaff_args args, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.AthenaResponse> resultHandler) throws org.apache.thrift.TException {
        iface.addStaff(args.companyInfo, args.staffInfo,resultHandler);
      }
    }

    public static class getStaffById<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getStaffById_args, com.aries.department.athena.contract.thrift.dto.StaffInfo> {
      public getStaffById() {
        super("getStaffById");
      }

      public getStaffById_args getEmptyArgsInstance() {
        return new getStaffById_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.StaffInfo> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.StaffInfo>() { 
          public void onComplete(com.aries.department.athena.contract.thrift.dto.StaffInfo o) {
            getStaffById_result result = new getStaffById_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getStaffById_result result = new getStaffById_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getStaffById_args args, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.StaffInfo> resultHandler) throws org.apache.thrift.TException {
        iface.getStaffById(args.companyInfo, args.id,resultHandler);
      }
    }

    public static class getStaffByName<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getStaffByName_args, java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> {
      public getStaffByName() {
        super("getStaffByName");
      }

      public getStaffByName_args getEmptyArgsInstance() {
        return new getStaffByName_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>>() { 
          public void onComplete(java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> o) {
            getStaffByName_result result = new getStaffByName_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getStaffByName_result result = new getStaffByName_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getStaffByName_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> resultHandler) throws org.apache.thrift.TException {
        iface.getStaffByName(args.companyInfo, args.name,resultHandler);
      }
    }

    public static class getStaffByPinyin<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getStaffByPinyin_args, java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> {
      public getStaffByPinyin() {
        super("getStaffByPinyin");
      }

      public getStaffByPinyin_args getEmptyArgsInstance() {
        return new getStaffByPinyin_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>>() { 
          public void onComplete(java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> o) {
            getStaffByPinyin_result result = new getStaffByPinyin_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getStaffByPinyin_result result = new getStaffByPinyin_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getStaffByPinyin_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> resultHandler) throws org.apache.thrift.TException {
        iface.getStaffByPinyin(args.companyInfo, args.pinyin,resultHandler);
      }
    }

    public static class getLastStaffBypinyin<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getLastStaffBypinyin_args, com.aries.department.athena.contract.thrift.dto.StaffInfo> {
      public getLastStaffBypinyin() {
        super("getLastStaffBypinyin");
      }

      public getLastStaffBypinyin_args getEmptyArgsInstance() {
        return new getLastStaffBypinyin_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.StaffInfo> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.StaffInfo>() { 
          public void onComplete(com.aries.department.athena.contract.thrift.dto.StaffInfo o) {
            getLastStaffBypinyin_result result = new getLastStaffBypinyin_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getLastStaffBypinyin_result result = new getLastStaffBypinyin_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getLastStaffBypinyin_args args, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.StaffInfo> resultHandler) throws org.apache.thrift.TException {
        iface.getLastStaffBypinyin(args.companyInfo, args.pinyin,resultHandler);
      }
    }

    public static class updateStaffById<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateStaffById_args, com.aries.department.athena.contract.thrift.dto.AthenaResponse> {
      public updateStaffById() {
        super("updateStaffById");
      }

      public updateStaffById_args getEmptyArgsInstance() {
        return new updateStaffById_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.AthenaResponse> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.AthenaResponse>() { 
          public void onComplete(com.aries.department.athena.contract.thrift.dto.AthenaResponse o) {
            updateStaffById_result result = new updateStaffById_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            updateStaffById_result result = new updateStaffById_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateStaffById_args args, org.apache.thrift.async.AsyncMethodCallback<com.aries.department.athena.contract.thrift.dto.AthenaResponse> resultHandler) throws org.apache.thrift.TException {
        iface.updateStaffById(args.companyInfo, args.id, args.staffInfo,resultHandler);
      }
    }

    public static class getStaffByDepartmentId<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getStaffByDepartmentId_args, java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> {
      public getStaffByDepartmentId() {
        super("getStaffByDepartmentId");
      }

      public getStaffByDepartmentId_args getEmptyArgsInstance() {
        return new getStaffByDepartmentId_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>>() { 
          public void onComplete(java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> o) {
            getStaffByDepartmentId_result result = new getStaffByDepartmentId_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getStaffByDepartmentId_result result = new getStaffByDepartmentId_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getStaffByDepartmentId_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>> resultHandler) throws org.apache.thrift.TException {
        iface.getStaffByDepartmentId(args.companyInfo, args.departmentId, args.pageNum, args.pageSize,resultHandler);
      }
    }

    public static class getStaffCountByDepartmentId<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getStaffCountByDepartmentId_args, java.lang.Long> {
      public getStaffCountByDepartmentId() {
        super("getStaffCountByDepartmentId");
      }

      public getStaffCountByDepartmentId_args getEmptyArgsInstance() {
        return new getStaffCountByDepartmentId_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.Long> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Long>() { 
          public void onComplete(java.lang.Long o) {
            getStaffCountByDepartmentId_result result = new getStaffCountByDepartmentId_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getStaffCountByDepartmentId_result result = new getStaffCountByDepartmentId_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getStaffCountByDepartmentId_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Long> resultHandler) throws org.apache.thrift.TException {
        iface.getStaffCountByDepartmentId(args.companyInfo, args.departmentId,resultHandler);
      }
    }

  }

  public static class ping_args implements org.apache.thrift.TBase<ping_args, ping_args._Fields>, java.io.Serializable, Cloneable, Comparable<ping_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ping_args");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ping_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ping_argsTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ping_args.class, metaDataMap);
    }

    public ping_args() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public ping_args(ping_args other) {
    }

    public ping_args deepCopy() {
      return new ping_args(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof ping_args)
        return this.equals((ping_args)that);
      return false;
    }

    public boolean equals(ping_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(ping_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("ping_args(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class ping_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public ping_argsStandardScheme getScheme() {
        return new ping_argsStandardScheme();
      }
    }

    private static class ping_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<ping_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, ping_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, ping_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class ping_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public ping_argsTupleScheme getScheme() {
        return new ping_argsTupleScheme();
      }
    }

    private static class ping_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<ping_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, ping_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, ping_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class ping_result implements org.apache.thrift.TBase<ping_result, ping_result._Fields>, java.io.Serializable, Cloneable, Comparable<ping_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ping_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRING, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ping_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ping_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ping_result.class, metaDataMap);
    }

    public ping_result() {
    }

    public ping_result(
      java.lang.String success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public ping_result(ping_result other) {
      if (other.isSetSuccess()) {
        this.success = other.success;
      }
    }

    public ping_result deepCopy() {
      return new ping_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getSuccess() {
      return this.success;
    }

    public ping_result setSuccess(@org.apache.thrift.annotation.Nullable java.lang.String success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof ping_result)
        return this.equals((ping_result)that);
      return false;
    }

    public boolean equals(ping_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(ping_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("ping_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class ping_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public ping_resultStandardScheme getScheme() {
        return new ping_resultStandardScheme();
      }
    }

    private static class ping_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<ping_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, ping_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.success = iprot.readString();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, ping_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeString(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class ping_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public ping_resultTupleScheme getScheme() {
        return new ping_resultTupleScheme();
      }
    }

    private static class ping_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<ping_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, ping_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeString(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, ping_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readString();
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class addStaff_args implements org.apache.thrift.TBase<addStaff_args, addStaff_args._Fields>, java.io.Serializable, Cloneable, Comparable<addStaff_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addStaff_args");

    private static final org.apache.thrift.protocol.TField COMPANY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyInfo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField STAFF_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("staffInfo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addStaff_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addStaff_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo; // required
    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COMPANY_INFO((short)1, "companyInfo"),
      STAFF_INFO((short)2, "staffInfo");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // COMPANY_INFO
            return COMPANY_INFO;
          case 2: // STAFF_INFO
            return STAFF_INFO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COMPANY_INFO, new org.apache.thrift.meta_data.FieldMetaData("companyInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.CompanyInfo.class)));
      tmpMap.put(_Fields.STAFF_INFO, new org.apache.thrift.meta_data.FieldMetaData("staffInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.StaffInfo.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addStaff_args.class, metaDataMap);
    }

    public addStaff_args() {
    }

    public addStaff_args(
      com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo,
      com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo)
    {
      this();
      this.companyInfo = companyInfo;
      this.staffInfo = staffInfo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addStaff_args(addStaff_args other) {
      if (other.isSetCompanyInfo()) {
        this.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo(other.companyInfo);
      }
      if (other.isSetStaffInfo()) {
        this.staffInfo = new com.aries.department.athena.contract.thrift.dto.StaffInfo(other.staffInfo);
      }
    }

    public addStaff_args deepCopy() {
      return new addStaff_args(this);
    }

    @Override
    public void clear() {
      this.companyInfo = null;
      this.staffInfo = null;
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.CompanyInfo getCompanyInfo() {
      return this.companyInfo;
    }

    public addStaff_args setCompanyInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo) {
      this.companyInfo = companyInfo;
      return this;
    }

    public void unsetCompanyInfo() {
      this.companyInfo = null;
    }

    /** Returns true if field companyInfo is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyInfo() {
      return this.companyInfo != null;
    }

    public void setCompanyInfoIsSet(boolean value) {
      if (!value) {
        this.companyInfo = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.StaffInfo getStaffInfo() {
      return this.staffInfo;
    }

    public addStaff_args setStaffInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo) {
      this.staffInfo = staffInfo;
      return this;
    }

    public void unsetStaffInfo() {
      this.staffInfo = null;
    }

    /** Returns true if field staffInfo is set (has been assigned a value) and false otherwise */
    public boolean isSetStaffInfo() {
      return this.staffInfo != null;
    }

    public void setStaffInfoIsSet(boolean value) {
      if (!value) {
        this.staffInfo = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case COMPANY_INFO:
        if (value == null) {
          unsetCompanyInfo();
        } else {
          setCompanyInfo((com.aries.department.athena.contract.thrift.dto.CompanyInfo)value);
        }
        break;

      case STAFF_INFO:
        if (value == null) {
          unsetStaffInfo();
        } else {
          setStaffInfo((com.aries.department.athena.contract.thrift.dto.StaffInfo)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case COMPANY_INFO:
        return getCompanyInfo();

      case STAFF_INFO:
        return getStaffInfo();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case COMPANY_INFO:
        return isSetCompanyInfo();
      case STAFF_INFO:
        return isSetStaffInfo();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof addStaff_args)
        return this.equals((addStaff_args)that);
      return false;
    }

    public boolean equals(addStaff_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_companyInfo = true && this.isSetCompanyInfo();
      boolean that_present_companyInfo = true && that.isSetCompanyInfo();
      if (this_present_companyInfo || that_present_companyInfo) {
        if (!(this_present_companyInfo && that_present_companyInfo))
          return false;
        if (!this.companyInfo.equals(that.companyInfo))
          return false;
      }

      boolean this_present_staffInfo = true && this.isSetStaffInfo();
      boolean that_present_staffInfo = true && that.isSetStaffInfo();
      if (this_present_staffInfo || that_present_staffInfo) {
        if (!(this_present_staffInfo && that_present_staffInfo))
          return false;
        if (!this.staffInfo.equals(that.staffInfo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetCompanyInfo()) ? 131071 : 524287);
      if (isSetCompanyInfo())
        hashCode = hashCode * 8191 + companyInfo.hashCode();

      hashCode = hashCode * 8191 + ((isSetStaffInfo()) ? 131071 : 524287);
      if (isSetStaffInfo())
        hashCode = hashCode * 8191 + staffInfo.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(addStaff_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetCompanyInfo()).compareTo(other.isSetCompanyInfo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyInfo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyInfo, other.companyInfo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetStaffInfo()).compareTo(other.isSetStaffInfo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetStaffInfo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.staffInfo, other.staffInfo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("addStaff_args(");
      boolean first = true;

      sb.append("companyInfo:");
      if (this.companyInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.companyInfo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("staffInfo:");
      if (this.staffInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.staffInfo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (companyInfo != null) {
        companyInfo.validate();
      }
      if (staffInfo != null) {
        staffInfo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addStaff_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public addStaff_argsStandardScheme getScheme() {
        return new addStaff_argsStandardScheme();
      }
    }

    private static class addStaff_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<addStaff_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addStaff_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // COMPANY_INFO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                struct.companyInfo.read(iprot);
                struct.setCompanyInfoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // STAFF_INFO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.staffInfo = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
                struct.staffInfo.read(iprot);
                struct.setStaffInfoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addStaff_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.companyInfo != null) {
          oprot.writeFieldBegin(COMPANY_INFO_FIELD_DESC);
          struct.companyInfo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.staffInfo != null) {
          oprot.writeFieldBegin(STAFF_INFO_FIELD_DESC);
          struct.staffInfo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addStaff_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public addStaff_argsTupleScheme getScheme() {
        return new addStaff_argsTupleScheme();
      }
    }

    private static class addStaff_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<addStaff_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addStaff_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCompanyInfo()) {
          optionals.set(0);
        }
        if (struct.isSetStaffInfo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetCompanyInfo()) {
          struct.companyInfo.write(oprot);
        }
        if (struct.isSetStaffInfo()) {
          struct.staffInfo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addStaff_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
          struct.companyInfo.read(iprot);
          struct.setCompanyInfoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.staffInfo = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
          struct.staffInfo.read(iprot);
          struct.setStaffInfoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class addStaff_result implements org.apache.thrift.TBase<addStaff_result, addStaff_result._Fields>, java.io.Serializable, Cloneable, Comparable<addStaff_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addStaff_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addStaff_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addStaff_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.AthenaResponse success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.AthenaResponse.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addStaff_result.class, metaDataMap);
    }

    public addStaff_result() {
    }

    public addStaff_result(
      com.aries.department.athena.contract.thrift.dto.AthenaResponse success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addStaff_result(addStaff_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.aries.department.athena.contract.thrift.dto.AthenaResponse(other.success);
      }
    }

    public addStaff_result deepCopy() {
      return new addStaff_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.AthenaResponse getSuccess() {
      return this.success;
    }

    public addStaff_result setSuccess(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.AthenaResponse success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.aries.department.athena.contract.thrift.dto.AthenaResponse)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof addStaff_result)
        return this.equals((addStaff_result)that);
      return false;
    }

    public boolean equals(addStaff_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(addStaff_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("addStaff_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addStaff_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public addStaff_resultStandardScheme getScheme() {
        return new addStaff_resultStandardScheme();
      }
    }

    private static class addStaff_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<addStaff_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addStaff_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.aries.department.athena.contract.thrift.dto.AthenaResponse();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addStaff_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addStaff_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public addStaff_resultTupleScheme getScheme() {
        return new addStaff_resultTupleScheme();
      }
    }

    private static class addStaff_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<addStaff_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addStaff_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addStaff_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.aries.department.athena.contract.thrift.dto.AthenaResponse();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getStaffById_args implements org.apache.thrift.TBase<getStaffById_args, getStaffById_args._Fields>, java.io.Serializable, Cloneable, Comparable<getStaffById_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getStaffById_args");

    private static final org.apache.thrift.protocol.TField COMPANY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyInfo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getStaffById_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getStaffById_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo; // required
    public int id; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COMPANY_INFO((short)1, "companyInfo"),
      ID((short)2, "id");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // COMPANY_INFO
            return COMPANY_INFO;
          case 2: // ID
            return ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COMPANY_INFO, new org.apache.thrift.meta_data.FieldMetaData("companyInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.CompanyInfo.class)));
      tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getStaffById_args.class, metaDataMap);
    }

    public getStaffById_args() {
    }

    public getStaffById_args(
      com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo,
      int id)
    {
      this();
      this.companyInfo = companyInfo;
      this.id = id;
      setIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getStaffById_args(getStaffById_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetCompanyInfo()) {
        this.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo(other.companyInfo);
      }
      this.id = other.id;
    }

    public getStaffById_args deepCopy() {
      return new getStaffById_args(this);
    }

    @Override
    public void clear() {
      this.companyInfo = null;
      setIdIsSet(false);
      this.id = 0;
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.CompanyInfo getCompanyInfo() {
      return this.companyInfo;
    }

    public getStaffById_args setCompanyInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo) {
      this.companyInfo = companyInfo;
      return this;
    }

    public void unsetCompanyInfo() {
      this.companyInfo = null;
    }

    /** Returns true if field companyInfo is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyInfo() {
      return this.companyInfo != null;
    }

    public void setCompanyInfoIsSet(boolean value) {
      if (!value) {
        this.companyInfo = null;
      }
    }

    public int getId() {
      return this.id;
    }

    public getStaffById_args setId(int id) {
      this.id = id;
      setIdIsSet(true);
      return this;
    }

    public void unsetId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
    }

    public void setIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case COMPANY_INFO:
        if (value == null) {
          unsetCompanyInfo();
        } else {
          setCompanyInfo((com.aries.department.athena.contract.thrift.dto.CompanyInfo)value);
        }
        break;

      case ID:
        if (value == null) {
          unsetId();
        } else {
          setId((java.lang.Integer)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case COMPANY_INFO:
        return getCompanyInfo();

      case ID:
        return getId();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case COMPANY_INFO:
        return isSetCompanyInfo();
      case ID:
        return isSetId();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getStaffById_args)
        return this.equals((getStaffById_args)that);
      return false;
    }

    public boolean equals(getStaffById_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_companyInfo = true && this.isSetCompanyInfo();
      boolean that_present_companyInfo = true && that.isSetCompanyInfo();
      if (this_present_companyInfo || that_present_companyInfo) {
        if (!(this_present_companyInfo && that_present_companyInfo))
          return false;
        if (!this.companyInfo.equals(that.companyInfo))
          return false;
      }

      boolean this_present_id = true;
      boolean that_present_id = true;
      if (this_present_id || that_present_id) {
        if (!(this_present_id && that_present_id))
          return false;
        if (this.id != that.id)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetCompanyInfo()) ? 131071 : 524287);
      if (isSetCompanyInfo())
        hashCode = hashCode * 8191 + companyInfo.hashCode();

      hashCode = hashCode * 8191 + id;

      return hashCode;
    }

    @Override
    public int compareTo(getStaffById_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetCompanyInfo()).compareTo(other.isSetCompanyInfo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyInfo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyInfo, other.companyInfo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getStaffById_args(");
      boolean first = true;

      sb.append("companyInfo:");
      if (this.companyInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.companyInfo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("id:");
      sb.append(this.id);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (companyInfo != null) {
        companyInfo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getStaffById_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffById_argsStandardScheme getScheme() {
        return new getStaffById_argsStandardScheme();
      }
    }

    private static class getStaffById_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getStaffById_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getStaffById_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // COMPANY_INFO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                struct.companyInfo.read(iprot);
                struct.setCompanyInfoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.id = iprot.readI32();
                struct.setIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getStaffById_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.companyInfo != null) {
          oprot.writeFieldBegin(COMPANY_INFO_FIELD_DESC);
          struct.companyInfo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getStaffById_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffById_argsTupleScheme getScheme() {
        return new getStaffById_argsTupleScheme();
      }
    }

    private static class getStaffById_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getStaffById_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getStaffById_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCompanyInfo()) {
          optionals.set(0);
        }
        if (struct.isSetId()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetCompanyInfo()) {
          struct.companyInfo.write(oprot);
        }
        if (struct.isSetId()) {
          oprot.writeI32(struct.id);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getStaffById_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
          struct.companyInfo.read(iprot);
          struct.setCompanyInfoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.id = iprot.readI32();
          struct.setIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getStaffById_result implements org.apache.thrift.TBase<getStaffById_result, getStaffById_result._Fields>, java.io.Serializable, Cloneable, Comparable<getStaffById_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getStaffById_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getStaffById_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getStaffById_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.StaffInfo.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getStaffById_result.class, metaDataMap);
    }

    public getStaffById_result() {
    }

    public getStaffById_result(
      com.aries.department.athena.contract.thrift.dto.StaffInfo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getStaffById_result(getStaffById_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.aries.department.athena.contract.thrift.dto.StaffInfo(other.success);
      }
    }

    public getStaffById_result deepCopy() {
      return new getStaffById_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.StaffInfo getSuccess() {
      return this.success;
    }

    public getStaffById_result setSuccess(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.aries.department.athena.contract.thrift.dto.StaffInfo)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getStaffById_result)
        return this.equals((getStaffById_result)that);
      return false;
    }

    public boolean equals(getStaffById_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getStaffById_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getStaffById_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getStaffById_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffById_resultStandardScheme getScheme() {
        return new getStaffById_resultStandardScheme();
      }
    }

    private static class getStaffById_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getStaffById_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getStaffById_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getStaffById_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getStaffById_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffById_resultTupleScheme getScheme() {
        return new getStaffById_resultTupleScheme();
      }
    }

    private static class getStaffById_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getStaffById_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getStaffById_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getStaffById_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getStaffByName_args implements org.apache.thrift.TBase<getStaffByName_args, getStaffByName_args._Fields>, java.io.Serializable, Cloneable, Comparable<getStaffByName_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getStaffByName_args");

    private static final org.apache.thrift.protocol.TField COMPANY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyInfo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getStaffByName_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getStaffByName_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo; // required
    public @org.apache.thrift.annotation.Nullable java.lang.String name; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COMPANY_INFO((short)1, "companyInfo"),
      NAME((short)2, "name");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // COMPANY_INFO
            return COMPANY_INFO;
          case 2: // NAME
            return NAME;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COMPANY_INFO, new org.apache.thrift.meta_data.FieldMetaData("companyInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.CompanyInfo.class)));
      tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getStaffByName_args.class, metaDataMap);
    }

    public getStaffByName_args() {
    }

    public getStaffByName_args(
      com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo,
      java.lang.String name)
    {
      this();
      this.companyInfo = companyInfo;
      this.name = name;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getStaffByName_args(getStaffByName_args other) {
      if (other.isSetCompanyInfo()) {
        this.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo(other.companyInfo);
      }
      if (other.isSetName()) {
        this.name = other.name;
      }
    }

    public getStaffByName_args deepCopy() {
      return new getStaffByName_args(this);
    }

    @Override
    public void clear() {
      this.companyInfo = null;
      this.name = null;
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.CompanyInfo getCompanyInfo() {
      return this.companyInfo;
    }

    public getStaffByName_args setCompanyInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo) {
      this.companyInfo = companyInfo;
      return this;
    }

    public void unsetCompanyInfo() {
      this.companyInfo = null;
    }

    /** Returns true if field companyInfo is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyInfo() {
      return this.companyInfo != null;
    }

    public void setCompanyInfoIsSet(boolean value) {
      if (!value) {
        this.companyInfo = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getName() {
      return this.name;
    }

    public getStaffByName_args setName(@org.apache.thrift.annotation.Nullable java.lang.String name) {
      this.name = name;
      return this;
    }

    public void unsetName() {
      this.name = null;
    }

    /** Returns true if field name is set (has been assigned a value) and false otherwise */
    public boolean isSetName() {
      return this.name != null;
    }

    public void setNameIsSet(boolean value) {
      if (!value) {
        this.name = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case COMPANY_INFO:
        if (value == null) {
          unsetCompanyInfo();
        } else {
          setCompanyInfo((com.aries.department.athena.contract.thrift.dto.CompanyInfo)value);
        }
        break;

      case NAME:
        if (value == null) {
          unsetName();
        } else {
          setName((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case COMPANY_INFO:
        return getCompanyInfo();

      case NAME:
        return getName();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case COMPANY_INFO:
        return isSetCompanyInfo();
      case NAME:
        return isSetName();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getStaffByName_args)
        return this.equals((getStaffByName_args)that);
      return false;
    }

    public boolean equals(getStaffByName_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_companyInfo = true && this.isSetCompanyInfo();
      boolean that_present_companyInfo = true && that.isSetCompanyInfo();
      if (this_present_companyInfo || that_present_companyInfo) {
        if (!(this_present_companyInfo && that_present_companyInfo))
          return false;
        if (!this.companyInfo.equals(that.companyInfo))
          return false;
      }

      boolean this_present_name = true && this.isSetName();
      boolean that_present_name = true && that.isSetName();
      if (this_present_name || that_present_name) {
        if (!(this_present_name && that_present_name))
          return false;
        if (!this.name.equals(that.name))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetCompanyInfo()) ? 131071 : 524287);
      if (isSetCompanyInfo())
        hashCode = hashCode * 8191 + companyInfo.hashCode();

      hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
      if (isSetName())
        hashCode = hashCode * 8191 + name.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getStaffByName_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetCompanyInfo()).compareTo(other.isSetCompanyInfo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyInfo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyInfo, other.companyInfo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetName()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getStaffByName_args(");
      boolean first = true;

      sb.append("companyInfo:");
      if (this.companyInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.companyInfo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (companyInfo != null) {
        companyInfo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getStaffByName_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffByName_argsStandardScheme getScheme() {
        return new getStaffByName_argsStandardScheme();
      }
    }

    private static class getStaffByName_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getStaffByName_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getStaffByName_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // COMPANY_INFO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                struct.companyInfo.read(iprot);
                struct.setCompanyInfoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // NAME
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.name = iprot.readString();
                struct.setNameIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getStaffByName_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.companyInfo != null) {
          oprot.writeFieldBegin(COMPANY_INFO_FIELD_DESC);
          struct.companyInfo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.name != null) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getStaffByName_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffByName_argsTupleScheme getScheme() {
        return new getStaffByName_argsTupleScheme();
      }
    }

    private static class getStaffByName_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getStaffByName_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getStaffByName_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCompanyInfo()) {
          optionals.set(0);
        }
        if (struct.isSetName()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetCompanyInfo()) {
          struct.companyInfo.write(oprot);
        }
        if (struct.isSetName()) {
          oprot.writeString(struct.name);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getStaffByName_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
          struct.companyInfo.read(iprot);
          struct.setCompanyInfoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.name = iprot.readString();
          struct.setNameIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getStaffByName_result implements org.apache.thrift.TBase<getStaffByName_result, getStaffByName_result._Fields>, java.io.Serializable, Cloneable, Comparable<getStaffByName_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getStaffByName_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getStaffByName_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getStaffByName_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.StaffInfo.class))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getStaffByName_result.class, metaDataMap);
    }

    public getStaffByName_result() {
    }

    public getStaffByName_result(
      java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getStaffByName_result(getStaffByName_result other) {
      if (other.isSetSuccess()) {
        java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> __this__success = new java.util.ArrayList<com.aries.department.athena.contract.thrift.dto.StaffInfo>(other.success.size());
        for (com.aries.department.athena.contract.thrift.dto.StaffInfo other_element : other.success) {
          __this__success.add(new com.aries.department.athena.contract.thrift.dto.StaffInfo(other_element));
        }
        this.success = __this__success;
      }
    }

    public getStaffByName_result deepCopy() {
      return new getStaffByName_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<com.aries.department.athena.contract.thrift.dto.StaffInfo> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(com.aries.department.athena.contract.thrift.dto.StaffInfo elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<com.aries.department.athena.contract.thrift.dto.StaffInfo>();
      }
      this.success.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> getSuccess() {
      return this.success;
    }

    public getStaffByName_result setSuccess(@org.apache.thrift.annotation.Nullable java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getStaffByName_result)
        return this.equals((getStaffByName_result)that);
      return false;
    }

    public boolean equals(getStaffByName_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getStaffByName_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getStaffByName_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getStaffByName_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffByName_resultStandardScheme getScheme() {
        return new getStaffByName_resultStandardScheme();
      }
    }

    private static class getStaffByName_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getStaffByName_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getStaffByName_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list24 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<com.aries.department.athena.contract.thrift.dto.StaffInfo>(_list24.size);
                  @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo _elem25;
                  for (int _i26 = 0; _i26 < _list24.size; ++_i26)
                  {
                    _elem25 = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
                    _elem25.read(iprot);
                    struct.success.add(_elem25);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getStaffByName_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (com.aries.department.athena.contract.thrift.dto.StaffInfo _iter27 : struct.success)
            {
              _iter27.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getStaffByName_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffByName_resultTupleScheme getScheme() {
        return new getStaffByName_resultTupleScheme();
      }
    }

    private static class getStaffByName_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getStaffByName_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getStaffByName_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (com.aries.department.athena.contract.thrift.dto.StaffInfo _iter28 : struct.success)
            {
              _iter28.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getStaffByName_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list29 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<com.aries.department.athena.contract.thrift.dto.StaffInfo>(_list29.size);
            @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo _elem30;
            for (int _i31 = 0; _i31 < _list29.size; ++_i31)
            {
              _elem30 = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
              _elem30.read(iprot);
              struct.success.add(_elem30);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getStaffByPinyin_args implements org.apache.thrift.TBase<getStaffByPinyin_args, getStaffByPinyin_args._Fields>, java.io.Serializable, Cloneable, Comparable<getStaffByPinyin_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getStaffByPinyin_args");

    private static final org.apache.thrift.protocol.TField COMPANY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyInfo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField PINYIN_FIELD_DESC = new org.apache.thrift.protocol.TField("pinyin", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getStaffByPinyin_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getStaffByPinyin_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo; // required
    public @org.apache.thrift.annotation.Nullable java.lang.String pinyin; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COMPANY_INFO((short)1, "companyInfo"),
      PINYIN((short)2, "pinyin");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // COMPANY_INFO
            return COMPANY_INFO;
          case 2: // PINYIN
            return PINYIN;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COMPANY_INFO, new org.apache.thrift.meta_data.FieldMetaData("companyInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.CompanyInfo.class)));
      tmpMap.put(_Fields.PINYIN, new org.apache.thrift.meta_data.FieldMetaData("pinyin", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getStaffByPinyin_args.class, metaDataMap);
    }

    public getStaffByPinyin_args() {
    }

    public getStaffByPinyin_args(
      com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo,
      java.lang.String pinyin)
    {
      this();
      this.companyInfo = companyInfo;
      this.pinyin = pinyin;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getStaffByPinyin_args(getStaffByPinyin_args other) {
      if (other.isSetCompanyInfo()) {
        this.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo(other.companyInfo);
      }
      if (other.isSetPinyin()) {
        this.pinyin = other.pinyin;
      }
    }

    public getStaffByPinyin_args deepCopy() {
      return new getStaffByPinyin_args(this);
    }

    @Override
    public void clear() {
      this.companyInfo = null;
      this.pinyin = null;
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.CompanyInfo getCompanyInfo() {
      return this.companyInfo;
    }

    public getStaffByPinyin_args setCompanyInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo) {
      this.companyInfo = companyInfo;
      return this;
    }

    public void unsetCompanyInfo() {
      this.companyInfo = null;
    }

    /** Returns true if field companyInfo is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyInfo() {
      return this.companyInfo != null;
    }

    public void setCompanyInfoIsSet(boolean value) {
      if (!value) {
        this.companyInfo = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getPinyin() {
      return this.pinyin;
    }

    public getStaffByPinyin_args setPinyin(@org.apache.thrift.annotation.Nullable java.lang.String pinyin) {
      this.pinyin = pinyin;
      return this;
    }

    public void unsetPinyin() {
      this.pinyin = null;
    }

    /** Returns true if field pinyin is set (has been assigned a value) and false otherwise */
    public boolean isSetPinyin() {
      return this.pinyin != null;
    }

    public void setPinyinIsSet(boolean value) {
      if (!value) {
        this.pinyin = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case COMPANY_INFO:
        if (value == null) {
          unsetCompanyInfo();
        } else {
          setCompanyInfo((com.aries.department.athena.contract.thrift.dto.CompanyInfo)value);
        }
        break;

      case PINYIN:
        if (value == null) {
          unsetPinyin();
        } else {
          setPinyin((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case COMPANY_INFO:
        return getCompanyInfo();

      case PINYIN:
        return getPinyin();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case COMPANY_INFO:
        return isSetCompanyInfo();
      case PINYIN:
        return isSetPinyin();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getStaffByPinyin_args)
        return this.equals((getStaffByPinyin_args)that);
      return false;
    }

    public boolean equals(getStaffByPinyin_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_companyInfo = true && this.isSetCompanyInfo();
      boolean that_present_companyInfo = true && that.isSetCompanyInfo();
      if (this_present_companyInfo || that_present_companyInfo) {
        if (!(this_present_companyInfo && that_present_companyInfo))
          return false;
        if (!this.companyInfo.equals(that.companyInfo))
          return false;
      }

      boolean this_present_pinyin = true && this.isSetPinyin();
      boolean that_present_pinyin = true && that.isSetPinyin();
      if (this_present_pinyin || that_present_pinyin) {
        if (!(this_present_pinyin && that_present_pinyin))
          return false;
        if (!this.pinyin.equals(that.pinyin))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetCompanyInfo()) ? 131071 : 524287);
      if (isSetCompanyInfo())
        hashCode = hashCode * 8191 + companyInfo.hashCode();

      hashCode = hashCode * 8191 + ((isSetPinyin()) ? 131071 : 524287);
      if (isSetPinyin())
        hashCode = hashCode * 8191 + pinyin.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getStaffByPinyin_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetCompanyInfo()).compareTo(other.isSetCompanyInfo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyInfo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyInfo, other.companyInfo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPinyin()).compareTo(other.isSetPinyin());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPinyin()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pinyin, other.pinyin);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getStaffByPinyin_args(");
      boolean first = true;

      sb.append("companyInfo:");
      if (this.companyInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.companyInfo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("pinyin:");
      if (this.pinyin == null) {
        sb.append("null");
      } else {
        sb.append(this.pinyin);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (companyInfo != null) {
        companyInfo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getStaffByPinyin_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffByPinyin_argsStandardScheme getScheme() {
        return new getStaffByPinyin_argsStandardScheme();
      }
    }

    private static class getStaffByPinyin_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getStaffByPinyin_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getStaffByPinyin_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // COMPANY_INFO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                struct.companyInfo.read(iprot);
                struct.setCompanyInfoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // PINYIN
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.pinyin = iprot.readString();
                struct.setPinyinIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getStaffByPinyin_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.companyInfo != null) {
          oprot.writeFieldBegin(COMPANY_INFO_FIELD_DESC);
          struct.companyInfo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.pinyin != null) {
          oprot.writeFieldBegin(PINYIN_FIELD_DESC);
          oprot.writeString(struct.pinyin);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getStaffByPinyin_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffByPinyin_argsTupleScheme getScheme() {
        return new getStaffByPinyin_argsTupleScheme();
      }
    }

    private static class getStaffByPinyin_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getStaffByPinyin_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getStaffByPinyin_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCompanyInfo()) {
          optionals.set(0);
        }
        if (struct.isSetPinyin()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetCompanyInfo()) {
          struct.companyInfo.write(oprot);
        }
        if (struct.isSetPinyin()) {
          oprot.writeString(struct.pinyin);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getStaffByPinyin_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
          struct.companyInfo.read(iprot);
          struct.setCompanyInfoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.pinyin = iprot.readString();
          struct.setPinyinIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getStaffByPinyin_result implements org.apache.thrift.TBase<getStaffByPinyin_result, getStaffByPinyin_result._Fields>, java.io.Serializable, Cloneable, Comparable<getStaffByPinyin_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getStaffByPinyin_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getStaffByPinyin_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getStaffByPinyin_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.StaffInfo.class))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getStaffByPinyin_result.class, metaDataMap);
    }

    public getStaffByPinyin_result() {
    }

    public getStaffByPinyin_result(
      java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getStaffByPinyin_result(getStaffByPinyin_result other) {
      if (other.isSetSuccess()) {
        java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> __this__success = new java.util.ArrayList<com.aries.department.athena.contract.thrift.dto.StaffInfo>(other.success.size());
        for (com.aries.department.athena.contract.thrift.dto.StaffInfo other_element : other.success) {
          __this__success.add(new com.aries.department.athena.contract.thrift.dto.StaffInfo(other_element));
        }
        this.success = __this__success;
      }
    }

    public getStaffByPinyin_result deepCopy() {
      return new getStaffByPinyin_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<com.aries.department.athena.contract.thrift.dto.StaffInfo> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(com.aries.department.athena.contract.thrift.dto.StaffInfo elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<com.aries.department.athena.contract.thrift.dto.StaffInfo>();
      }
      this.success.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> getSuccess() {
      return this.success;
    }

    public getStaffByPinyin_result setSuccess(@org.apache.thrift.annotation.Nullable java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getStaffByPinyin_result)
        return this.equals((getStaffByPinyin_result)that);
      return false;
    }

    public boolean equals(getStaffByPinyin_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getStaffByPinyin_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getStaffByPinyin_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getStaffByPinyin_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffByPinyin_resultStandardScheme getScheme() {
        return new getStaffByPinyin_resultStandardScheme();
      }
    }

    private static class getStaffByPinyin_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getStaffByPinyin_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getStaffByPinyin_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list32 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<com.aries.department.athena.contract.thrift.dto.StaffInfo>(_list32.size);
                  @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo _elem33;
                  for (int _i34 = 0; _i34 < _list32.size; ++_i34)
                  {
                    _elem33 = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
                    _elem33.read(iprot);
                    struct.success.add(_elem33);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getStaffByPinyin_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (com.aries.department.athena.contract.thrift.dto.StaffInfo _iter35 : struct.success)
            {
              _iter35.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getStaffByPinyin_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffByPinyin_resultTupleScheme getScheme() {
        return new getStaffByPinyin_resultTupleScheme();
      }
    }

    private static class getStaffByPinyin_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getStaffByPinyin_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getStaffByPinyin_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (com.aries.department.athena.contract.thrift.dto.StaffInfo _iter36 : struct.success)
            {
              _iter36.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getStaffByPinyin_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<com.aries.department.athena.contract.thrift.dto.StaffInfo>(_list37.size);
            @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo _elem38;
            for (int _i39 = 0; _i39 < _list37.size; ++_i39)
            {
              _elem38 = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
              _elem38.read(iprot);
              struct.success.add(_elem38);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getLastStaffBypinyin_args implements org.apache.thrift.TBase<getLastStaffBypinyin_args, getLastStaffBypinyin_args._Fields>, java.io.Serializable, Cloneable, Comparable<getLastStaffBypinyin_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getLastStaffBypinyin_args");

    private static final org.apache.thrift.protocol.TField COMPANY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyInfo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField PINYIN_FIELD_DESC = new org.apache.thrift.protocol.TField("pinyin", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getLastStaffBypinyin_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getLastStaffBypinyin_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo; // required
    public @org.apache.thrift.annotation.Nullable java.lang.String pinyin; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COMPANY_INFO((short)1, "companyInfo"),
      PINYIN((short)2, "pinyin");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // COMPANY_INFO
            return COMPANY_INFO;
          case 2: // PINYIN
            return PINYIN;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COMPANY_INFO, new org.apache.thrift.meta_data.FieldMetaData("companyInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.CompanyInfo.class)));
      tmpMap.put(_Fields.PINYIN, new org.apache.thrift.meta_data.FieldMetaData("pinyin", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getLastStaffBypinyin_args.class, metaDataMap);
    }

    public getLastStaffBypinyin_args() {
    }

    public getLastStaffBypinyin_args(
      com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo,
      java.lang.String pinyin)
    {
      this();
      this.companyInfo = companyInfo;
      this.pinyin = pinyin;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getLastStaffBypinyin_args(getLastStaffBypinyin_args other) {
      if (other.isSetCompanyInfo()) {
        this.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo(other.companyInfo);
      }
      if (other.isSetPinyin()) {
        this.pinyin = other.pinyin;
      }
    }

    public getLastStaffBypinyin_args deepCopy() {
      return new getLastStaffBypinyin_args(this);
    }

    @Override
    public void clear() {
      this.companyInfo = null;
      this.pinyin = null;
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.CompanyInfo getCompanyInfo() {
      return this.companyInfo;
    }

    public getLastStaffBypinyin_args setCompanyInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo) {
      this.companyInfo = companyInfo;
      return this;
    }

    public void unsetCompanyInfo() {
      this.companyInfo = null;
    }

    /** Returns true if field companyInfo is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyInfo() {
      return this.companyInfo != null;
    }

    public void setCompanyInfoIsSet(boolean value) {
      if (!value) {
        this.companyInfo = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getPinyin() {
      return this.pinyin;
    }

    public getLastStaffBypinyin_args setPinyin(@org.apache.thrift.annotation.Nullable java.lang.String pinyin) {
      this.pinyin = pinyin;
      return this;
    }

    public void unsetPinyin() {
      this.pinyin = null;
    }

    /** Returns true if field pinyin is set (has been assigned a value) and false otherwise */
    public boolean isSetPinyin() {
      return this.pinyin != null;
    }

    public void setPinyinIsSet(boolean value) {
      if (!value) {
        this.pinyin = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case COMPANY_INFO:
        if (value == null) {
          unsetCompanyInfo();
        } else {
          setCompanyInfo((com.aries.department.athena.contract.thrift.dto.CompanyInfo)value);
        }
        break;

      case PINYIN:
        if (value == null) {
          unsetPinyin();
        } else {
          setPinyin((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case COMPANY_INFO:
        return getCompanyInfo();

      case PINYIN:
        return getPinyin();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case COMPANY_INFO:
        return isSetCompanyInfo();
      case PINYIN:
        return isSetPinyin();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getLastStaffBypinyin_args)
        return this.equals((getLastStaffBypinyin_args)that);
      return false;
    }

    public boolean equals(getLastStaffBypinyin_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_companyInfo = true && this.isSetCompanyInfo();
      boolean that_present_companyInfo = true && that.isSetCompanyInfo();
      if (this_present_companyInfo || that_present_companyInfo) {
        if (!(this_present_companyInfo && that_present_companyInfo))
          return false;
        if (!this.companyInfo.equals(that.companyInfo))
          return false;
      }

      boolean this_present_pinyin = true && this.isSetPinyin();
      boolean that_present_pinyin = true && that.isSetPinyin();
      if (this_present_pinyin || that_present_pinyin) {
        if (!(this_present_pinyin && that_present_pinyin))
          return false;
        if (!this.pinyin.equals(that.pinyin))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetCompanyInfo()) ? 131071 : 524287);
      if (isSetCompanyInfo())
        hashCode = hashCode * 8191 + companyInfo.hashCode();

      hashCode = hashCode * 8191 + ((isSetPinyin()) ? 131071 : 524287);
      if (isSetPinyin())
        hashCode = hashCode * 8191 + pinyin.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getLastStaffBypinyin_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetCompanyInfo()).compareTo(other.isSetCompanyInfo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyInfo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyInfo, other.companyInfo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPinyin()).compareTo(other.isSetPinyin());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPinyin()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pinyin, other.pinyin);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getLastStaffBypinyin_args(");
      boolean first = true;

      sb.append("companyInfo:");
      if (this.companyInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.companyInfo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("pinyin:");
      if (this.pinyin == null) {
        sb.append("null");
      } else {
        sb.append(this.pinyin);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (companyInfo != null) {
        companyInfo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getLastStaffBypinyin_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getLastStaffBypinyin_argsStandardScheme getScheme() {
        return new getLastStaffBypinyin_argsStandardScheme();
      }
    }

    private static class getLastStaffBypinyin_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getLastStaffBypinyin_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getLastStaffBypinyin_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // COMPANY_INFO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                struct.companyInfo.read(iprot);
                struct.setCompanyInfoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // PINYIN
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.pinyin = iprot.readString();
                struct.setPinyinIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getLastStaffBypinyin_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.companyInfo != null) {
          oprot.writeFieldBegin(COMPANY_INFO_FIELD_DESC);
          struct.companyInfo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.pinyin != null) {
          oprot.writeFieldBegin(PINYIN_FIELD_DESC);
          oprot.writeString(struct.pinyin);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getLastStaffBypinyin_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getLastStaffBypinyin_argsTupleScheme getScheme() {
        return new getLastStaffBypinyin_argsTupleScheme();
      }
    }

    private static class getLastStaffBypinyin_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getLastStaffBypinyin_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getLastStaffBypinyin_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCompanyInfo()) {
          optionals.set(0);
        }
        if (struct.isSetPinyin()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetCompanyInfo()) {
          struct.companyInfo.write(oprot);
        }
        if (struct.isSetPinyin()) {
          oprot.writeString(struct.pinyin);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getLastStaffBypinyin_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
          struct.companyInfo.read(iprot);
          struct.setCompanyInfoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.pinyin = iprot.readString();
          struct.setPinyinIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getLastStaffBypinyin_result implements org.apache.thrift.TBase<getLastStaffBypinyin_result, getLastStaffBypinyin_result._Fields>, java.io.Serializable, Cloneable, Comparable<getLastStaffBypinyin_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getLastStaffBypinyin_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getLastStaffBypinyin_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getLastStaffBypinyin_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.StaffInfo.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getLastStaffBypinyin_result.class, metaDataMap);
    }

    public getLastStaffBypinyin_result() {
    }

    public getLastStaffBypinyin_result(
      com.aries.department.athena.contract.thrift.dto.StaffInfo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getLastStaffBypinyin_result(getLastStaffBypinyin_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.aries.department.athena.contract.thrift.dto.StaffInfo(other.success);
      }
    }

    public getLastStaffBypinyin_result deepCopy() {
      return new getLastStaffBypinyin_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.StaffInfo getSuccess() {
      return this.success;
    }

    public getLastStaffBypinyin_result setSuccess(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.aries.department.athena.contract.thrift.dto.StaffInfo)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getLastStaffBypinyin_result)
        return this.equals((getLastStaffBypinyin_result)that);
      return false;
    }

    public boolean equals(getLastStaffBypinyin_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getLastStaffBypinyin_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getLastStaffBypinyin_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getLastStaffBypinyin_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getLastStaffBypinyin_resultStandardScheme getScheme() {
        return new getLastStaffBypinyin_resultStandardScheme();
      }
    }

    private static class getLastStaffBypinyin_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getLastStaffBypinyin_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getLastStaffBypinyin_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getLastStaffBypinyin_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getLastStaffBypinyin_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getLastStaffBypinyin_resultTupleScheme getScheme() {
        return new getLastStaffBypinyin_resultTupleScheme();
      }
    }

    private static class getLastStaffBypinyin_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getLastStaffBypinyin_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getLastStaffBypinyin_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getLastStaffBypinyin_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class updateStaffById_args implements org.apache.thrift.TBase<updateStaffById_args, updateStaffById_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateStaffById_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateStaffById_args");

    private static final org.apache.thrift.protocol.TField COMPANY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyInfo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)2);
    private static final org.apache.thrift.protocol.TField STAFF_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("staffInfo", org.apache.thrift.protocol.TType.STRUCT, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateStaffById_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateStaffById_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo; // required
    public long id; // required
    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COMPANY_INFO((short)1, "companyInfo"),
      ID((short)2, "id"),
      STAFF_INFO((short)3, "staffInfo");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // COMPANY_INFO
            return COMPANY_INFO;
          case 2: // ID
            return ID;
          case 3: // STAFF_INFO
            return STAFF_INFO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COMPANY_INFO, new org.apache.thrift.meta_data.FieldMetaData("companyInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.CompanyInfo.class)));
      tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.STAFF_INFO, new org.apache.thrift.meta_data.FieldMetaData("staffInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.StaffInfo.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateStaffById_args.class, metaDataMap);
    }

    public updateStaffById_args() {
    }

    public updateStaffById_args(
      com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo,
      long id,
      com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo)
    {
      this();
      this.companyInfo = companyInfo;
      this.id = id;
      setIdIsSet(true);
      this.staffInfo = staffInfo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateStaffById_args(updateStaffById_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetCompanyInfo()) {
        this.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo(other.companyInfo);
      }
      this.id = other.id;
      if (other.isSetStaffInfo()) {
        this.staffInfo = new com.aries.department.athena.contract.thrift.dto.StaffInfo(other.staffInfo);
      }
    }

    public updateStaffById_args deepCopy() {
      return new updateStaffById_args(this);
    }

    @Override
    public void clear() {
      this.companyInfo = null;
      setIdIsSet(false);
      this.id = 0;
      this.staffInfo = null;
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.CompanyInfo getCompanyInfo() {
      return this.companyInfo;
    }

    public updateStaffById_args setCompanyInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo) {
      this.companyInfo = companyInfo;
      return this;
    }

    public void unsetCompanyInfo() {
      this.companyInfo = null;
    }

    /** Returns true if field companyInfo is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyInfo() {
      return this.companyInfo != null;
    }

    public void setCompanyInfoIsSet(boolean value) {
      if (!value) {
        this.companyInfo = null;
      }
    }

    public long getId() {
      return this.id;
    }

    public updateStaffById_args setId(long id) {
      this.id = id;
      setIdIsSet(true);
      return this;
    }

    public void unsetId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
    }

    public void setIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.StaffInfo getStaffInfo() {
      return this.staffInfo;
    }

    public updateStaffById_args setStaffInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo staffInfo) {
      this.staffInfo = staffInfo;
      return this;
    }

    public void unsetStaffInfo() {
      this.staffInfo = null;
    }

    /** Returns true if field staffInfo is set (has been assigned a value) and false otherwise */
    public boolean isSetStaffInfo() {
      return this.staffInfo != null;
    }

    public void setStaffInfoIsSet(boolean value) {
      if (!value) {
        this.staffInfo = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case COMPANY_INFO:
        if (value == null) {
          unsetCompanyInfo();
        } else {
          setCompanyInfo((com.aries.department.athena.contract.thrift.dto.CompanyInfo)value);
        }
        break;

      case ID:
        if (value == null) {
          unsetId();
        } else {
          setId((java.lang.Long)value);
        }
        break;

      case STAFF_INFO:
        if (value == null) {
          unsetStaffInfo();
        } else {
          setStaffInfo((com.aries.department.athena.contract.thrift.dto.StaffInfo)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case COMPANY_INFO:
        return getCompanyInfo();

      case ID:
        return getId();

      case STAFF_INFO:
        return getStaffInfo();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case COMPANY_INFO:
        return isSetCompanyInfo();
      case ID:
        return isSetId();
      case STAFF_INFO:
        return isSetStaffInfo();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof updateStaffById_args)
        return this.equals((updateStaffById_args)that);
      return false;
    }

    public boolean equals(updateStaffById_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_companyInfo = true && this.isSetCompanyInfo();
      boolean that_present_companyInfo = true && that.isSetCompanyInfo();
      if (this_present_companyInfo || that_present_companyInfo) {
        if (!(this_present_companyInfo && that_present_companyInfo))
          return false;
        if (!this.companyInfo.equals(that.companyInfo))
          return false;
      }

      boolean this_present_id = true;
      boolean that_present_id = true;
      if (this_present_id || that_present_id) {
        if (!(this_present_id && that_present_id))
          return false;
        if (this.id != that.id)
          return false;
      }

      boolean this_present_staffInfo = true && this.isSetStaffInfo();
      boolean that_present_staffInfo = true && that.isSetStaffInfo();
      if (this_present_staffInfo || that_present_staffInfo) {
        if (!(this_present_staffInfo && that_present_staffInfo))
          return false;
        if (!this.staffInfo.equals(that.staffInfo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetCompanyInfo()) ? 131071 : 524287);
      if (isSetCompanyInfo())
        hashCode = hashCode * 8191 + companyInfo.hashCode();

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(id);

      hashCode = hashCode * 8191 + ((isSetStaffInfo()) ? 131071 : 524287);
      if (isSetStaffInfo())
        hashCode = hashCode * 8191 + staffInfo.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(updateStaffById_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetCompanyInfo()).compareTo(other.isSetCompanyInfo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyInfo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyInfo, other.companyInfo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetStaffInfo()).compareTo(other.isSetStaffInfo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetStaffInfo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.staffInfo, other.staffInfo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("updateStaffById_args(");
      boolean first = true;

      sb.append("companyInfo:");
      if (this.companyInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.companyInfo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("id:");
      sb.append(this.id);
      first = false;
      if (!first) sb.append(", ");
      sb.append("staffInfo:");
      if (this.staffInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.staffInfo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (companyInfo != null) {
        companyInfo.validate();
      }
      if (staffInfo != null) {
        staffInfo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateStaffById_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateStaffById_argsStandardScheme getScheme() {
        return new updateStaffById_argsStandardScheme();
      }
    }

    private static class updateStaffById_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateStaffById_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateStaffById_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // COMPANY_INFO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                struct.companyInfo.read(iprot);
                struct.setCompanyInfoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.id = iprot.readI64();
                struct.setIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // STAFF_INFO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.staffInfo = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
                struct.staffInfo.read(iprot);
                struct.setStaffInfoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateStaffById_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.companyInfo != null) {
          oprot.writeFieldBegin(COMPANY_INFO_FIELD_DESC);
          struct.companyInfo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
        if (struct.staffInfo != null) {
          oprot.writeFieldBegin(STAFF_INFO_FIELD_DESC);
          struct.staffInfo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateStaffById_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateStaffById_argsTupleScheme getScheme() {
        return new updateStaffById_argsTupleScheme();
      }
    }

    private static class updateStaffById_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateStaffById_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateStaffById_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCompanyInfo()) {
          optionals.set(0);
        }
        if (struct.isSetId()) {
          optionals.set(1);
        }
        if (struct.isSetStaffInfo()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetCompanyInfo()) {
          struct.companyInfo.write(oprot);
        }
        if (struct.isSetId()) {
          oprot.writeI64(struct.id);
        }
        if (struct.isSetStaffInfo()) {
          struct.staffInfo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateStaffById_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
          struct.companyInfo.read(iprot);
          struct.setCompanyInfoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.id = iprot.readI64();
          struct.setIdIsSet(true);
        }
        if (incoming.get(2)) {
          struct.staffInfo = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
          struct.staffInfo.read(iprot);
          struct.setStaffInfoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class updateStaffById_result implements org.apache.thrift.TBase<updateStaffById_result, updateStaffById_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateStaffById_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateStaffById_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateStaffById_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateStaffById_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.AthenaResponse success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.AthenaResponse.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateStaffById_result.class, metaDataMap);
    }

    public updateStaffById_result() {
    }

    public updateStaffById_result(
      com.aries.department.athena.contract.thrift.dto.AthenaResponse success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateStaffById_result(updateStaffById_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.aries.department.athena.contract.thrift.dto.AthenaResponse(other.success);
      }
    }

    public updateStaffById_result deepCopy() {
      return new updateStaffById_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.AthenaResponse getSuccess() {
      return this.success;
    }

    public updateStaffById_result setSuccess(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.AthenaResponse success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.aries.department.athena.contract.thrift.dto.AthenaResponse)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof updateStaffById_result)
        return this.equals((updateStaffById_result)that);
      return false;
    }

    public boolean equals(updateStaffById_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(updateStaffById_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("updateStaffById_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateStaffById_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateStaffById_resultStandardScheme getScheme() {
        return new updateStaffById_resultStandardScheme();
      }
    }

    private static class updateStaffById_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateStaffById_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateStaffById_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.aries.department.athena.contract.thrift.dto.AthenaResponse();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateStaffById_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateStaffById_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateStaffById_resultTupleScheme getScheme() {
        return new updateStaffById_resultTupleScheme();
      }
    }

    private static class updateStaffById_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateStaffById_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateStaffById_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateStaffById_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.aries.department.athena.contract.thrift.dto.AthenaResponse();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getStaffByDepartmentId_args implements org.apache.thrift.TBase<getStaffByDepartmentId_args, getStaffByDepartmentId_args._Fields>, java.io.Serializable, Cloneable, Comparable<getStaffByDepartmentId_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getStaffByDepartmentId_args");

    private static final org.apache.thrift.protocol.TField COMPANY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyInfo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField DEPARTMENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("departmentId", org.apache.thrift.protocol.TType.I64, (short)2);
    private static final org.apache.thrift.protocol.TField PAGE_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("pageNum", org.apache.thrift.protocol.TType.I32, (short)3);
    private static final org.apache.thrift.protocol.TField PAGE_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("pageSize", org.apache.thrift.protocol.TType.I32, (short)4);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getStaffByDepartmentId_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getStaffByDepartmentId_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo; // required
    public long departmentId; // required
    public int pageNum; // required
    public int pageSize; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COMPANY_INFO((short)1, "companyInfo"),
      DEPARTMENT_ID((short)2, "departmentId"),
      PAGE_NUM((short)3, "pageNum"),
      PAGE_SIZE((short)4, "pageSize");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // COMPANY_INFO
            return COMPANY_INFO;
          case 2: // DEPARTMENT_ID
            return DEPARTMENT_ID;
          case 3: // PAGE_NUM
            return PAGE_NUM;
          case 4: // PAGE_SIZE
            return PAGE_SIZE;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __DEPARTMENTID_ISSET_ID = 0;
    private static final int __PAGENUM_ISSET_ID = 1;
    private static final int __PAGESIZE_ISSET_ID = 2;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COMPANY_INFO, new org.apache.thrift.meta_data.FieldMetaData("companyInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.CompanyInfo.class)));
      tmpMap.put(_Fields.DEPARTMENT_ID, new org.apache.thrift.meta_data.FieldMetaData("departmentId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.PAGE_NUM, new org.apache.thrift.meta_data.FieldMetaData("pageNum", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.PAGE_SIZE, new org.apache.thrift.meta_data.FieldMetaData("pageSize", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getStaffByDepartmentId_args.class, metaDataMap);
    }

    public getStaffByDepartmentId_args() {
    }

    public getStaffByDepartmentId_args(
      com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo,
      long departmentId,
      int pageNum,
      int pageSize)
    {
      this();
      this.companyInfo = companyInfo;
      this.departmentId = departmentId;
      setDepartmentIdIsSet(true);
      this.pageNum = pageNum;
      setPageNumIsSet(true);
      this.pageSize = pageSize;
      setPageSizeIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getStaffByDepartmentId_args(getStaffByDepartmentId_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetCompanyInfo()) {
        this.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo(other.companyInfo);
      }
      this.departmentId = other.departmentId;
      this.pageNum = other.pageNum;
      this.pageSize = other.pageSize;
    }

    public getStaffByDepartmentId_args deepCopy() {
      return new getStaffByDepartmentId_args(this);
    }

    @Override
    public void clear() {
      this.companyInfo = null;
      setDepartmentIdIsSet(false);
      this.departmentId = 0;
      setPageNumIsSet(false);
      this.pageNum = 0;
      setPageSizeIsSet(false);
      this.pageSize = 0;
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.CompanyInfo getCompanyInfo() {
      return this.companyInfo;
    }

    public getStaffByDepartmentId_args setCompanyInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo) {
      this.companyInfo = companyInfo;
      return this;
    }

    public void unsetCompanyInfo() {
      this.companyInfo = null;
    }

    /** Returns true if field companyInfo is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyInfo() {
      return this.companyInfo != null;
    }

    public void setCompanyInfoIsSet(boolean value) {
      if (!value) {
        this.companyInfo = null;
      }
    }

    public long getDepartmentId() {
      return this.departmentId;
    }

    public getStaffByDepartmentId_args setDepartmentId(long departmentId) {
      this.departmentId = departmentId;
      setDepartmentIdIsSet(true);
      return this;
    }

    public void unsetDepartmentId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DEPARTMENTID_ISSET_ID);
    }

    /** Returns true if field departmentId is set (has been assigned a value) and false otherwise */
    public boolean isSetDepartmentId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DEPARTMENTID_ISSET_ID);
    }

    public void setDepartmentIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DEPARTMENTID_ISSET_ID, value);
    }

    public int getPageNum() {
      return this.pageNum;
    }

    public getStaffByDepartmentId_args setPageNum(int pageNum) {
      this.pageNum = pageNum;
      setPageNumIsSet(true);
      return this;
    }

    public void unsetPageNum() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGENUM_ISSET_ID);
    }

    /** Returns true if field pageNum is set (has been assigned a value) and false otherwise */
    public boolean isSetPageNum() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGENUM_ISSET_ID);
    }

    public void setPageNumIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGENUM_ISSET_ID, value);
    }

    public int getPageSize() {
      return this.pageSize;
    }

    public getStaffByDepartmentId_args setPageSize(int pageSize) {
      this.pageSize = pageSize;
      setPageSizeIsSet(true);
      return this;
    }

    public void unsetPageSize() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGESIZE_ISSET_ID);
    }

    /** Returns true if field pageSize is set (has been assigned a value) and false otherwise */
    public boolean isSetPageSize() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGESIZE_ISSET_ID);
    }

    public void setPageSizeIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGESIZE_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case COMPANY_INFO:
        if (value == null) {
          unsetCompanyInfo();
        } else {
          setCompanyInfo((com.aries.department.athena.contract.thrift.dto.CompanyInfo)value);
        }
        break;

      case DEPARTMENT_ID:
        if (value == null) {
          unsetDepartmentId();
        } else {
          setDepartmentId((java.lang.Long)value);
        }
        break;

      case PAGE_NUM:
        if (value == null) {
          unsetPageNum();
        } else {
          setPageNum((java.lang.Integer)value);
        }
        break;

      case PAGE_SIZE:
        if (value == null) {
          unsetPageSize();
        } else {
          setPageSize((java.lang.Integer)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case COMPANY_INFO:
        return getCompanyInfo();

      case DEPARTMENT_ID:
        return getDepartmentId();

      case PAGE_NUM:
        return getPageNum();

      case PAGE_SIZE:
        return getPageSize();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case COMPANY_INFO:
        return isSetCompanyInfo();
      case DEPARTMENT_ID:
        return isSetDepartmentId();
      case PAGE_NUM:
        return isSetPageNum();
      case PAGE_SIZE:
        return isSetPageSize();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getStaffByDepartmentId_args)
        return this.equals((getStaffByDepartmentId_args)that);
      return false;
    }

    public boolean equals(getStaffByDepartmentId_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_companyInfo = true && this.isSetCompanyInfo();
      boolean that_present_companyInfo = true && that.isSetCompanyInfo();
      if (this_present_companyInfo || that_present_companyInfo) {
        if (!(this_present_companyInfo && that_present_companyInfo))
          return false;
        if (!this.companyInfo.equals(that.companyInfo))
          return false;
      }

      boolean this_present_departmentId = true;
      boolean that_present_departmentId = true;
      if (this_present_departmentId || that_present_departmentId) {
        if (!(this_present_departmentId && that_present_departmentId))
          return false;
        if (this.departmentId != that.departmentId)
          return false;
      }

      boolean this_present_pageNum = true;
      boolean that_present_pageNum = true;
      if (this_present_pageNum || that_present_pageNum) {
        if (!(this_present_pageNum && that_present_pageNum))
          return false;
        if (this.pageNum != that.pageNum)
          return false;
      }

      boolean this_present_pageSize = true;
      boolean that_present_pageSize = true;
      if (this_present_pageSize || that_present_pageSize) {
        if (!(this_present_pageSize && that_present_pageSize))
          return false;
        if (this.pageSize != that.pageSize)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetCompanyInfo()) ? 131071 : 524287);
      if (isSetCompanyInfo())
        hashCode = hashCode * 8191 + companyInfo.hashCode();

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(departmentId);

      hashCode = hashCode * 8191 + pageNum;

      hashCode = hashCode * 8191 + pageSize;

      return hashCode;
    }

    @Override
    public int compareTo(getStaffByDepartmentId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetCompanyInfo()).compareTo(other.isSetCompanyInfo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyInfo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyInfo, other.companyInfo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDepartmentId()).compareTo(other.isSetDepartmentId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDepartmentId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.departmentId, other.departmentId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPageNum()).compareTo(other.isSetPageNum());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageNum()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageNum, other.pageNum);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPageSize()).compareTo(other.isSetPageSize());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageSize()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageSize, other.pageSize);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getStaffByDepartmentId_args(");
      boolean first = true;

      sb.append("companyInfo:");
      if (this.companyInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.companyInfo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("departmentId:");
      sb.append(this.departmentId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("pageNum:");
      sb.append(this.pageNum);
      first = false;
      if (!first) sb.append(", ");
      sb.append("pageSize:");
      sb.append(this.pageSize);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (companyInfo != null) {
        companyInfo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getStaffByDepartmentId_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffByDepartmentId_argsStandardScheme getScheme() {
        return new getStaffByDepartmentId_argsStandardScheme();
      }
    }

    private static class getStaffByDepartmentId_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getStaffByDepartmentId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getStaffByDepartmentId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // COMPANY_INFO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                struct.companyInfo.read(iprot);
                struct.setCompanyInfoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // DEPARTMENT_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.departmentId = iprot.readI64();
                struct.setDepartmentIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // PAGE_NUM
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.pageNum = iprot.readI32();
                struct.setPageNumIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // PAGE_SIZE
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.pageSize = iprot.readI32();
                struct.setPageSizeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getStaffByDepartmentId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.companyInfo != null) {
          oprot.writeFieldBegin(COMPANY_INFO_FIELD_DESC);
          struct.companyInfo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(DEPARTMENT_ID_FIELD_DESC);
        oprot.writeI64(struct.departmentId);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(PAGE_NUM_FIELD_DESC);
        oprot.writeI32(struct.pageNum);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(PAGE_SIZE_FIELD_DESC);
        oprot.writeI32(struct.pageSize);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getStaffByDepartmentId_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffByDepartmentId_argsTupleScheme getScheme() {
        return new getStaffByDepartmentId_argsTupleScheme();
      }
    }

    private static class getStaffByDepartmentId_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getStaffByDepartmentId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getStaffByDepartmentId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCompanyInfo()) {
          optionals.set(0);
        }
        if (struct.isSetDepartmentId()) {
          optionals.set(1);
        }
        if (struct.isSetPageNum()) {
          optionals.set(2);
        }
        if (struct.isSetPageSize()) {
          optionals.set(3);
        }
        oprot.writeBitSet(optionals, 4);
        if (struct.isSetCompanyInfo()) {
          struct.companyInfo.write(oprot);
        }
        if (struct.isSetDepartmentId()) {
          oprot.writeI64(struct.departmentId);
        }
        if (struct.isSetPageNum()) {
          oprot.writeI32(struct.pageNum);
        }
        if (struct.isSetPageSize()) {
          oprot.writeI32(struct.pageSize);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getStaffByDepartmentId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(4);
        if (incoming.get(0)) {
          struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
          struct.companyInfo.read(iprot);
          struct.setCompanyInfoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.departmentId = iprot.readI64();
          struct.setDepartmentIdIsSet(true);
        }
        if (incoming.get(2)) {
          struct.pageNum = iprot.readI32();
          struct.setPageNumIsSet(true);
        }
        if (incoming.get(3)) {
          struct.pageSize = iprot.readI32();
          struct.setPageSizeIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getStaffByDepartmentId_result implements org.apache.thrift.TBase<getStaffByDepartmentId_result, getStaffByDepartmentId_result._Fields>, java.io.Serializable, Cloneable, Comparable<getStaffByDepartmentId_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getStaffByDepartmentId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getStaffByDepartmentId_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getStaffByDepartmentId_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.StaffInfo.class))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getStaffByDepartmentId_result.class, metaDataMap);
    }

    public getStaffByDepartmentId_result() {
    }

    public getStaffByDepartmentId_result(
      java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getStaffByDepartmentId_result(getStaffByDepartmentId_result other) {
      if (other.isSetSuccess()) {
        java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> __this__success = new java.util.ArrayList<com.aries.department.athena.contract.thrift.dto.StaffInfo>(other.success.size());
        for (com.aries.department.athena.contract.thrift.dto.StaffInfo other_element : other.success) {
          __this__success.add(new com.aries.department.athena.contract.thrift.dto.StaffInfo(other_element));
        }
        this.success = __this__success;
      }
    }

    public getStaffByDepartmentId_result deepCopy() {
      return new getStaffByDepartmentId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<com.aries.department.athena.contract.thrift.dto.StaffInfo> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(com.aries.department.athena.contract.thrift.dto.StaffInfo elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<com.aries.department.athena.contract.thrift.dto.StaffInfo>();
      }
      this.success.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> getSuccess() {
      return this.success;
    }

    public getStaffByDepartmentId_result setSuccess(@org.apache.thrift.annotation.Nullable java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<com.aries.department.athena.contract.thrift.dto.StaffInfo>)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getStaffByDepartmentId_result)
        return this.equals((getStaffByDepartmentId_result)that);
      return false;
    }

    public boolean equals(getStaffByDepartmentId_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getStaffByDepartmentId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getStaffByDepartmentId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getStaffByDepartmentId_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffByDepartmentId_resultStandardScheme getScheme() {
        return new getStaffByDepartmentId_resultStandardScheme();
      }
    }

    private static class getStaffByDepartmentId_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getStaffByDepartmentId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getStaffByDepartmentId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list40 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<com.aries.department.athena.contract.thrift.dto.StaffInfo>(_list40.size);
                  @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo _elem41;
                  for (int _i42 = 0; _i42 < _list40.size; ++_i42)
                  {
                    _elem41 = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
                    _elem41.read(iprot);
                    struct.success.add(_elem41);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getStaffByDepartmentId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (com.aries.department.athena.contract.thrift.dto.StaffInfo _iter43 : struct.success)
            {
              _iter43.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getStaffByDepartmentId_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffByDepartmentId_resultTupleScheme getScheme() {
        return new getStaffByDepartmentId_resultTupleScheme();
      }
    }

    private static class getStaffByDepartmentId_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getStaffByDepartmentId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getStaffByDepartmentId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (com.aries.department.athena.contract.thrift.dto.StaffInfo _iter44 : struct.success)
            {
              _iter44.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getStaffByDepartmentId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list45 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<com.aries.department.athena.contract.thrift.dto.StaffInfo>(_list45.size);
            @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.StaffInfo _elem46;
            for (int _i47 = 0; _i47 < _list45.size; ++_i47)
            {
              _elem46 = new com.aries.department.athena.contract.thrift.dto.StaffInfo();
              _elem46.read(iprot);
              struct.success.add(_elem46);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getStaffCountByDepartmentId_args implements org.apache.thrift.TBase<getStaffCountByDepartmentId_args, getStaffCountByDepartmentId_args._Fields>, java.io.Serializable, Cloneable, Comparable<getStaffCountByDepartmentId_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getStaffCountByDepartmentId_args");

    private static final org.apache.thrift.protocol.TField COMPANY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyInfo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField DEPARTMENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("departmentId", org.apache.thrift.protocol.TType.I64, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getStaffCountByDepartmentId_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getStaffCountByDepartmentId_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo; // required
    public long departmentId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COMPANY_INFO((short)1, "companyInfo"),
      DEPARTMENT_ID((short)2, "departmentId");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // COMPANY_INFO
            return COMPANY_INFO;
          case 2: // DEPARTMENT_ID
            return DEPARTMENT_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __DEPARTMENTID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COMPANY_INFO, new org.apache.thrift.meta_data.FieldMetaData("companyInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.aries.department.athena.contract.thrift.dto.CompanyInfo.class)));
      tmpMap.put(_Fields.DEPARTMENT_ID, new org.apache.thrift.meta_data.FieldMetaData("departmentId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getStaffCountByDepartmentId_args.class, metaDataMap);
    }

    public getStaffCountByDepartmentId_args() {
    }

    public getStaffCountByDepartmentId_args(
      com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo,
      long departmentId)
    {
      this();
      this.companyInfo = companyInfo;
      this.departmentId = departmentId;
      setDepartmentIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getStaffCountByDepartmentId_args(getStaffCountByDepartmentId_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetCompanyInfo()) {
        this.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo(other.companyInfo);
      }
      this.departmentId = other.departmentId;
    }

    public getStaffCountByDepartmentId_args deepCopy() {
      return new getStaffCountByDepartmentId_args(this);
    }

    @Override
    public void clear() {
      this.companyInfo = null;
      setDepartmentIdIsSet(false);
      this.departmentId = 0;
    }

    @org.apache.thrift.annotation.Nullable
    public com.aries.department.athena.contract.thrift.dto.CompanyInfo getCompanyInfo() {
      return this.companyInfo;
    }

    public getStaffCountByDepartmentId_args setCompanyInfo(@org.apache.thrift.annotation.Nullable com.aries.department.athena.contract.thrift.dto.CompanyInfo companyInfo) {
      this.companyInfo = companyInfo;
      return this;
    }

    public void unsetCompanyInfo() {
      this.companyInfo = null;
    }

    /** Returns true if field companyInfo is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyInfo() {
      return this.companyInfo != null;
    }

    public void setCompanyInfoIsSet(boolean value) {
      if (!value) {
        this.companyInfo = null;
      }
    }

    public long getDepartmentId() {
      return this.departmentId;
    }

    public getStaffCountByDepartmentId_args setDepartmentId(long departmentId) {
      this.departmentId = departmentId;
      setDepartmentIdIsSet(true);
      return this;
    }

    public void unsetDepartmentId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DEPARTMENTID_ISSET_ID);
    }

    /** Returns true if field departmentId is set (has been assigned a value) and false otherwise */
    public boolean isSetDepartmentId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DEPARTMENTID_ISSET_ID);
    }

    public void setDepartmentIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DEPARTMENTID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case COMPANY_INFO:
        if (value == null) {
          unsetCompanyInfo();
        } else {
          setCompanyInfo((com.aries.department.athena.contract.thrift.dto.CompanyInfo)value);
        }
        break;

      case DEPARTMENT_ID:
        if (value == null) {
          unsetDepartmentId();
        } else {
          setDepartmentId((java.lang.Long)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case COMPANY_INFO:
        return getCompanyInfo();

      case DEPARTMENT_ID:
        return getDepartmentId();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case COMPANY_INFO:
        return isSetCompanyInfo();
      case DEPARTMENT_ID:
        return isSetDepartmentId();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getStaffCountByDepartmentId_args)
        return this.equals((getStaffCountByDepartmentId_args)that);
      return false;
    }

    public boolean equals(getStaffCountByDepartmentId_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_companyInfo = true && this.isSetCompanyInfo();
      boolean that_present_companyInfo = true && that.isSetCompanyInfo();
      if (this_present_companyInfo || that_present_companyInfo) {
        if (!(this_present_companyInfo && that_present_companyInfo))
          return false;
        if (!this.companyInfo.equals(that.companyInfo))
          return false;
      }

      boolean this_present_departmentId = true;
      boolean that_present_departmentId = true;
      if (this_present_departmentId || that_present_departmentId) {
        if (!(this_present_departmentId && that_present_departmentId))
          return false;
        if (this.departmentId != that.departmentId)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetCompanyInfo()) ? 131071 : 524287);
      if (isSetCompanyInfo())
        hashCode = hashCode * 8191 + companyInfo.hashCode();

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(departmentId);

      return hashCode;
    }

    @Override
    public int compareTo(getStaffCountByDepartmentId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetCompanyInfo()).compareTo(other.isSetCompanyInfo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyInfo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyInfo, other.companyInfo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDepartmentId()).compareTo(other.isSetDepartmentId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDepartmentId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.departmentId, other.departmentId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getStaffCountByDepartmentId_args(");
      boolean first = true;

      sb.append("companyInfo:");
      if (this.companyInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.companyInfo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("departmentId:");
      sb.append(this.departmentId);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (companyInfo != null) {
        companyInfo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getStaffCountByDepartmentId_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffCountByDepartmentId_argsStandardScheme getScheme() {
        return new getStaffCountByDepartmentId_argsStandardScheme();
      }
    }

    private static class getStaffCountByDepartmentId_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getStaffCountByDepartmentId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getStaffCountByDepartmentId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // COMPANY_INFO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
                struct.companyInfo.read(iprot);
                struct.setCompanyInfoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // DEPARTMENT_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.departmentId = iprot.readI64();
                struct.setDepartmentIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getStaffCountByDepartmentId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.companyInfo != null) {
          oprot.writeFieldBegin(COMPANY_INFO_FIELD_DESC);
          struct.companyInfo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(DEPARTMENT_ID_FIELD_DESC);
        oprot.writeI64(struct.departmentId);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getStaffCountByDepartmentId_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffCountByDepartmentId_argsTupleScheme getScheme() {
        return new getStaffCountByDepartmentId_argsTupleScheme();
      }
    }

    private static class getStaffCountByDepartmentId_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getStaffCountByDepartmentId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getStaffCountByDepartmentId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCompanyInfo()) {
          optionals.set(0);
        }
        if (struct.isSetDepartmentId()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetCompanyInfo()) {
          struct.companyInfo.write(oprot);
        }
        if (struct.isSetDepartmentId()) {
          oprot.writeI64(struct.departmentId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getStaffCountByDepartmentId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.companyInfo = new com.aries.department.athena.contract.thrift.dto.CompanyInfo();
          struct.companyInfo.read(iprot);
          struct.setCompanyInfoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.departmentId = iprot.readI64();
          struct.setDepartmentIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getStaffCountByDepartmentId_result implements org.apache.thrift.TBase<getStaffCountByDepartmentId_result, getStaffCountByDepartmentId_result._Fields>, java.io.Serializable, Cloneable, Comparable<getStaffCountByDepartmentId_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getStaffCountByDepartmentId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.I64, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getStaffCountByDepartmentId_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getStaffCountByDepartmentId_resultTupleSchemeFactory();

    public long success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getStaffCountByDepartmentId_result.class, metaDataMap);
    }

    public getStaffCountByDepartmentId_result() {
    }

    public getStaffCountByDepartmentId_result(
      long success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getStaffCountByDepartmentId_result(getStaffCountByDepartmentId_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public getStaffCountByDepartmentId_result deepCopy() {
      return new getStaffCountByDepartmentId_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = 0;
    }

    public long getSuccess() {
      return this.success;
    }

    public getStaffCountByDepartmentId_result setSuccess(long success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.Long)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getStaffCountByDepartmentId_result)
        return this.equals((getStaffCountByDepartmentId_result)that);
      return false;
    }

    public boolean equals(getStaffCountByDepartmentId_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(success);

      return hashCode;
    }

    @Override
    public int compareTo(getStaffCountByDepartmentId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getStaffCountByDepartmentId_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getStaffCountByDepartmentId_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffCountByDepartmentId_resultStandardScheme getScheme() {
        return new getStaffCountByDepartmentId_resultStandardScheme();
      }
    }

    private static class getStaffCountByDepartmentId_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getStaffCountByDepartmentId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getStaffCountByDepartmentId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.success = iprot.readI64();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getStaffCountByDepartmentId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeI64(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getStaffCountByDepartmentId_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getStaffCountByDepartmentId_resultTupleScheme getScheme() {
        return new getStaffCountByDepartmentId_resultTupleScheme();
      }
    }

    private static class getStaffCountByDepartmentId_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getStaffCountByDepartmentId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getStaffCountByDepartmentId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeI64(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getStaffCountByDepartmentId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readI64();
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
